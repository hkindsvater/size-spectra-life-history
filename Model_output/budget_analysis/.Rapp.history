data4
floor(data3[,2 ])
for (j in 1:length(na.omit(data1[,2])>0) ){            costs[j] <-  MTcosts_s[1, roundL[j]]     }
for (j in 1:215) {            costs[j] <-  MTcosts_s[1, roundL[j]]     }
dim(MTcosts_s)
rep(1:12, 20)
for (j in 1:215) {#
            costs[j] <-  MTcosts_s[ c(seasonvec[j], roundL[j]) ]    #
              }
seasonvec <- rep(1:12, 20)          for (j in 1:215) {#
            costs[j] <-  MTcosts_s[ c(seasonvec[j], roundL[j]) ]    #
              }
c(seasonvec[j], roundL[j])
class(roundL)
class(seasonvec)
dim()
dim(L)
roundL <- as.numeric(floor(data3[,2 ]))#
    seasonvec <- rep(1:12, 20)          for (j in 1:215) {#
            costs[j] <-  MTcosts_s[ c(seasonvec[j], roundL[j]) ]    #
              }
warnings()
dim(roundL)
roundL
for (j in 1:215) {#
        	print(roundL[j])           # costs[j] <-  MTcosts_s[ c(seasonvec[j], roundL[j]) ]    #
              }
for (j in 1:215) {#
        	print(c(seasonvec[j], roundL[j])           # costs[j] <-  MTcosts_s[ c(seasonvec[j], roundL[j]) ]    #
              }
seasonvec <- rep(1:12, 20)          for (j in 1:215) {#
        	print(c(seasonvec[j], roundL[j]))           # costs[j] <-  MTcosts_s[ c(seasonvec[j], roundL[j]) ]    #
              }
coords<- matrix(nrow=215, ncol = 2)#
    seasonvec <- rep(1:12, 20)          for (j in 1:215) {#
        	coords[j, ] <- (c(seasonvec[j], roundL[j]))#
        	}
coords
MTcosts_s[coords[1, ]]
coords[1, ]
MTcosts_s
coords[1, ]
MTcosts_s[1,5]
MTcosts_s[coords[1, ]]
class(coords[1,])
list(coords[1,])
MTcosts_s[list(coords[1,])]
MTcosts_s[as.vector(coords[1,])]
MTcosts_s[c(coords[1,]))]
MTcosts_s[c(coords[1,])]
for (j in 1:215) {#
        	 x <- seasonvec[j]#
        	 y <- roundL[j]        	#
        	        	}           costs[j] <-  MTcosts_s[x,y]    #
              }
seasonvec <- rep(1:12, 20)          for (j in 1:215) {#
        	 x <- seasonvec[j]#
        	 y <- roundL[j]        	#
           costs[j] <-  MTcosts_s[x,y]    #
              }
costs
for (j in 1:215) {#
        	 x <- seasonvec[j]#
        	 y <- roundL[j]        	#
        	    print(x,y)    	            costs[j] <-  MTcosts_s[x,y]    #
              }
for (j in 1:215) {#
        	 x <- seasonvec[j]#
        	 y <- roundL[j]        	#
        	    print(c(x,y))    	            costs[j] <-  MTcosts_s[x,y]    #
              }
for (j in 1:215) {#
        	 x <- seasonvec[j]#
        	 y <- roundL[j]        	#
        	    print(c(x,y))    	            costs[j] <-  MTcosts_s[x,y]    #
              }
length(costs)
12*20
12*18
seasonvec <- rep(1:12, 18)          for (j in 1:215) {#
        	 x <- seasonvec[j]#
        	 y <- roundL[j]        	#
        	    print(c(x,y))    	            costs[j] <-  MTcosts_s[x,y]    #
              }
seasonvec <- rep(1:12, 18)          for (j in 1:215) {#
        	 x <- seasonvec[j]#
        	 y <- roundL[j]        	#
        	    print(c(x,y,MTcosts_s[x,y]  )    	            #costs[j] <-  MTcosts_s[x,y]    #
              }
seasonvec <- rep(1:12, 18)          for (j in 1:215) {#
        	 x <- seasonvec[j]#
        	 y <- roundL[j]        	#
        	    print(c(x,y,MTcosts_s[x,y]  )  )  	            #costs[j] <-  MTcosts_s[x,y]    #
              }
for (j in 1:215) {#
        	for (i in 1:215) {#
        		if(i == roundL[j])  y <- roundL[j] #
        		}
}
y
for (j in 1:215) {#
        	for (i in 1:215) {#
        		if(i == roundL[j])  y[i] <- roundL[j] #
        		}
}
y
roundL
cbind(seasonsvec, roundL)
cbind(seasons]vec, roundL)
cbind(seasonvec, roundL)
cbind(seasonvec[1:215], roundL)
indexmat<-cbind(seasonvec[1:215], roundL)
for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    print(c(x,y,MTcosts_s[x,y]  )  )  	            #costs[j] <-  MTcosts_s[x,y]    #
              }
for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    print(c(x,y,MTcosts_s[x,y]  )  )  	              costs<- MTcosts_s[x,y]    #
              }
costs
for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    print(c(x,y,MTcosts_s[x,y]  )  )  	              costs[j]<- MTcosts_s[x,y]    #
              }
costs
state <-  t(rbind(fit_age, as.data.frame(state_data)[1, -c(1,216)]))  survival <-   as.data.frame(surv_data)[-216,]  #
  data3 <-   t(rbind(fit_age, as.data.frame(length_data)[1, -c(1,216)]))   reproduction <- t(rbind(fit_age, as.data.frame(repro_data)[1, -c(1,216)]))   roundL <- as.numeric(floor(data3[,2 ]))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    print(c(x,y,MTcosts_s[x,y]  )  )  	              costs[j]<- MTcosts_s[x,y]    #
              }
state
state[,2]
plot(state)
plot(fit_age, state)
matplot(state)
state
survival
dim(state)
state[,2]*survival[,2]
data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2 > 0.3, 1, 0)
survival
survival <- ifelse(data2[,2] > 0.3, 1, 0)
survival
survival <- ifelse(data2[,2] > 0.03, 1, 0)
survival
length(survival)
for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
              }
costs
data1[,2]*survival
dim(data1)
as.data.frame(state_data)[1, -c(1,216)]
t(as.data.frame(state_data)[1, -c(1,216)])
t(as.data.frame(state_data)[1, -c(1,216:217)])
data1 <-  t(as.data.frame(state_data)[1, -c(1,216:217)])
dim(data1)
data1 <-  t(as.data.frame(state_data)[1, -c(1,216)])
dim(data1)
state<- data1*survival
state
data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])
data3*survival
cbind(state, reproduction, costs)
data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])
state<- data1*survival#
     reproduction <- data4*survival*Jdensity #
     totalbudget = cbind(state, reproduction, costs)
totalbudget
matplot(totalbudget)
roundL <- as.numeric(floor(data3[,2 ]))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
              }     state<- data1*survival#
     reproduction <- data4*survival*Jdensity #
     totalbudget = cbind(state, reproduction, costs)
roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
              }
matplot(1:215, totalbudget, type="l", xaxt="n", lwd=3,   ylab="State", xlab="Age (years)", ylim=c(0, 1.5e+8))
matplot(1:215, totalbudget, type="l", xaxt="n", lwd=3, lty=1,  ylab="State", xlab="Age (years)", ylim=c(0, 1.5e+8))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))
budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)
matplot(1:215,  budget, type="l", xaxt="n", lwd=3, lty=1,  ylab="State", xlab="Age (years)", ylim=c(0, 1.5e+8))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   lines(totalbudget)
lines((a*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue")   lines((a*roundL^3)*0.1, col= "brown", lwd=2)
roundL*survival
lines((a*survival*roundL^3)*0.6, col="orange")
matplot(1:215,  budget, type="p", xaxt="n", lty=1,  ylab="State", xlab="Age (years)", ylim=c(0, 1.5e+8))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   lines(totalbudget)#
      lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue")   lines((a*roundL^3)*0.1, col= "brown", lwd=2)
matplot(1:215,  budget, type="p", xaxt="n", pch=c(14:16),  ylab="State", xlab="Age (years)", ylim=c(0, 1.5e+8))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   lines(totalbudget)#
      lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue")   lines((a*roundL^3)*0.1, col= "brown", lwd=2)
matplot(1:215,  budget, type="l", xaxt="n",  ylab="State", xlab="Age (years)", ylim=c(0, 1.5e+8))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))
lines(totalbudget)#
   lines(state-reproduction)#
     # lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue")   lines((a*roundL^3)*0.1, col= "brown", lwd=2)
budgetdifference <- state[2:215]-reproduction[1:214]
budgetdifference
budgetdifference <- state[2:215]+reproduction[1:214]
budgetdifference <- c(state[2:215]+reproduction[1:214]), 0
budgetdifference <- c(state[2:215]+reproduction[1:214], 0)
length(budgetdifference)
matplot(1:215,  budget, type="l", xaxt="n",  ylab="State", xlab="Age (years)", ylim=c(0, 1.5e+8))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   lines(totalbudget, lwd=4)#
   budgetdifference <- c(state[2:215]+reproduction[1:214], 0)#
#
   lines(budgetdifference, lty=3, col = red)
matplot(1:215,  budget, type="l", xaxt="n",  ylab="State", xlab="Age (years)", ylim=c(0, 1.5e+8))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   lines(totalbudget, lwd=4)#
   budgetdifference <- c(state[2:215]+reproduction[1:214], 0)#
#
   lines(budgetdifference, lty=3, col =2)
lines((a*roundL^3)*0.2, col= "blue")   lines((a*roundL^3)*0.1, col= "brown", lwd=2)
matplot(1:215,  budget, type="l", xaxt="n", lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 1.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[2:215]+reproduction[1:214], 0)#
#
   # lines(budgetdifference, lty=3, col =2)#
     # lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "brown", lwd=2, lty=3)
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 1.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[2:215]+reproduction[1:214], 0)#
#
   # lines(budgetdifference, lty=3, col =2)#
     # lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "brown", lwd=2, lty=3)
data_files
budgetdifference <- c(state[2:215]+reproduction[1:214]+costs[1:214], 0)#
#
  lines(budgetdifference, lty=3, col =2)
legend("topright", legend=c("total energy", "stores", "reproduction", "metabolic costs"), c("black", "purple", "dark blue", "orange"), lty=c(1, 1, 1, 1), lwd=3)
legend("topright", legend=c("total energy", "stores", "reproduction", "metabolic costs"), col=c("black", "purple", "dark blue", "orange"), lty=c(1, 1, 1, 1), lwd=3)
legend("topright", legend=c("total energy", "stores", "reproduction", "metabolic costs"), bty="n", col=c("black", "purple", "dark blue", "orange"), lty=c(1, 1, 1, 1), lwd=3)
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 1.1e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   lines(totalbudget, lwd=4)#
   budgetdifference <- c(state[2:215]+reproduction[1:214]+costs[1:214], 0)#
#
  lines(budgetdifference, lty=3, col =2)#
     # lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "brown", lwd=2, lty=3)#
   legend("topright", legend=c("total energy", "stores", "reproduction", "metabolic costs"), bty="n", col=c("black", "purple", "dark blue", "orange"), lty=c(1, 1, 1, 1), lwd=3)
roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_c[x,y]*survival[j]    #
              }     state<- data1*survival#
     reproduction <- data4*survival*Jdensity #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 1.1e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   lines(totalbudget, lwd=4)#
   budgetdifference <- c(state[2:215]+reproduction[1:214]+costs[1:214], 0)#
#
  lines(budgetdifference, lty=3, col =2)#
     # lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "brown", lwd=2, lty=3)#
   legend("topright", legend=c("total energy", "stores", "reproduction", "metabolic costs"), bty="n", col=c("black", "purple", "dark blue", "orange"), lty=c(1, 1, 1, 1), lwd=3)
budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  lines(budgetdifference, lty=3, col =2)
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 1.1e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  lines(budgetdifference, lty=3, col =2)#
     # lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "brown", lwd=2, lty=3)#
   legend("topright", legend=c( "stores", "reproduction", "metabolic costs"), bty="n", col=c(  "purple", "dark blue", "orange"), lty=c(  1, 1, 1), lwd=3)
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 1.1e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  # lines(budgetdifference, lty=3, col =2)#
     # lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "brown", lwd=2, lty=3)#
   legend("topright", legend=c( "stores", "reproduction", "metabolic costs"), bty="n", col=c(  "purple", "dark blue", "orange"), lty=c(  1, 1, 1), lwd=3)
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 1.1e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  # lines(budgetdifference, lty=3, col =2)#
     # lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   legend("topright", legend=c( "stores", "reproduction", "metabolic costs", "critical threshold"), bty="n", col=c(  "purple", "dark blue", "orange", "red"), lty=c(  1, 1, 1), lwd=3)
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 1.1e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  # lines(budgetdifference, lty=3, col =2)#
     # lines((a*survival*roundL^3)*0.6, col="orange")   #lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   legend("topright", legend=c( "stores", "reproduction", "metabolic costs", "critical threshold"), bty="n", col=c(  "purple", "dark blue", "orange", "red"), lty=c(  1, 1, 1), lwd=3)
data_files <- data_files1[c(2, 5, 8, 11)] #
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)#
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_c[x,y]*survival[j]    #
              }     state<- data1*survival#
     reproduction <- data4*survival*Jdensity #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 1.1e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  # lines(budgetdifference, lty=3, col =2)#
     # lines((a*survival*roundL^3)*0.6, col="orange")   #lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   legend("topright", legend=c( "stores", "reproduction", "metabolic costs", "critical threshold"), bty="n", col=c(  "purple", "dark blue", "orange", "red"), lty=c(  1, 1, 1), lwd=3)
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/")#
#
 source("Code/MTcosts.R")#
 setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/budget_analysis")      data_files1 <- list.files(pattern = "\\.csv$")#
#
#data_files <- data_files1[c(1, 4, 7, 10)] #
data_files <- data_files1[c(2, 5, 8, 11)] #
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)#
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_c[x,y]*survival[j]    #
              }     state<- data1*survival#
     reproduction <- data4*survival*Jdensity #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 2e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  # lines(budgetdifference, lty=3, col =2)#
     # lines((a*survival*roundL^3)*0.6, col="orange")   #lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   legend("topright", legend=c( "stores", "reproduction", "metabolic costs", "critical threshold"), bty="n", col=c(  "purple", "dark blue", "orange", "red"), lty=c(  1, 1, 1), lwd=3)
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 3e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  # lines(budgetdifference, lty=3, col =2)#
     # lines((a*survival*roundL^3)*0.6, col="orange")   #lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   legend("topright", legend=c( "stores", "reproduction", "metabolic costs", "critical threshold"), bty="n", col=c(  "purple", "dark blue", "orange", "red"), lty=c(  1, 1, 1), lwd=3)
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 6e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  # lines(budgetdifference, lty=3, col =2)#
     # lines((a*survival*roundL^3)*0.6, col="orange")   #lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)
legend("topright", legend=c( "stores", "reproduction", "metabolic costs", "critical threshold"), bty="n", col=c(  "purple", "dark blue", "orange", "red"), lty=c(  1, 1, 1), lwd=3)
data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
              }     state<- data1*survival#
     reproduction <- data4*survival*Jdensity #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 5e+9), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  # lines(budgetdifference, lty=3, col =2)#
     # lines((a*survival*roundL^3)*0.6, col="orange")   #lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   legend("topright", legend=c( "stores", "reproduction", "metabolic costs", "critical threshold"), bty="n", col=c(  "purple", "dark blue", "orange", "red"), lty=c(  1, 1, 1), lwd=3)
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 8e+9), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  # lines(budgetdifference, lty=3, col =2)#
     # lines((a*survival*roundL^3)*0.6, col="orange")   #lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   legend("topright", legend=c( "stores", "reproduction", "metabolic costs", "critical threshold"), bty="n", col=c(  "purple", "dark blue", "orange", "red"), lty=c(  1, 1, 1), lwd=3)
data4
state<- data1*survival#
     reproduction <- data4*survival  #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 8e+9), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  # lines(budgetdifference, lty=3, col =2)#
     # lines((a*survival*roundL^3)*0.6, col="orange")   #lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   legend("topright", legend=c( "stores", "reproduction", "metabolic costs", "critical threshold"), bty="n", col=c(  "purple", "dark blue", "orange", "red"), lty=c(  1, 1, 1), lwd=3)
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  # lines(budgetdifference, lty=3, col =2)#
     # lines((a*survival*roundL^3)*0.6, col="orange")   #lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   legend("topright", legend=c( "stores", "reproduction", "metabolic costs", "critical threshold"), bty="n", col=c(  "purple", "dark blue", "orange", "red"), lty=c(  1, 1, 1), lwd=3)
lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)
Income
lines(Income_s, col="green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold"), bty="n", col=c("green", "purple", "dark blue", "orange", "red"), lty=c( 1, 1, 1, 1), lwd=3)
Income_s <- Income
lines(Income_s, col="green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold"), bty="n", col=c("green", "purple", "dark blue", "orange", "red"), lty=c( 1, 1, 1, 1), lwd=3)
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/")#
#
 source("Code/MTcosts.R")#
 setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/budget_analysis")      data_files1 <- list.files(pattern = "\\.csv$")#
#
 data_files <- data_files1[c(1, 4, 7, 10)] #
#data_files <- data_files1[c(2, 5, 8, 11)] #
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)#
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
                 food[j]<-Income_s[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival  #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)      quartz()  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  # lines(budgetdifference, lty=3, col =2)#
       lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(Income_s, col="green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold"), bty="n", col=c("green", "purple", "dark blue", "orange", "red"), lty=c( 1, 1, 1, 1), lwd=3)
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/")#
#
 source("Code/MTcosts.R")#
 setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/budget_analysis")      data_files1 <- list.files(pattern = "\\.csv$")#
#
 data_files <- data_files1[c(1, 4, 7, 10)] #
#data_files <- data_files1[c(2, 5, 8, 11)] #
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)#
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
                 food[j]<-Income_s[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival  #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)      quartz()  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  # lines(budgetdifference, lty=3, col =2)#
       lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(Income_s, col="green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold"), bty="n", col=c("green", "purple", "dark blue", "orange", "red"), lty=c( 1, 1, 1, 1), lwd=3)
food
lines(food, col="green", lwd=2, lty=4)
quartz()  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 1e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  # lines(budgetdifference, lty=3, col =2)#
       lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold"), bty="n", col=c("green", "purple", "dark blue", "orange", "red"), lty=c( 1, 1, 1, 1), lwd=3)
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 1e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  # lines(budgetdifference, lty=3, col =2)#
       lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red"), lty=c( 1, 1, 1, 1), lwd=3)
reproduction
repro_data
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/")#
#
 source("Code/MTcosts.R")#
 setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/budget_analysis")      data_files1 <- list.files(pattern = "\\.csv$")#
#
 data_files <- data_files1[c(1, 4, 7, 10)] #
#data_files <- data_files1[c(2, 5, 8, 11)] #
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)#
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
                 food[j]<-Income_s[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival  #
      budget = cbind(state, reproduction*Jdensity, costs)#
     totalbudget <- rowSums(budget)      quartz()  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 1e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  # lines(budgetdifference, lty=3, col =2)#
       lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red"), lty=c( 1, 1, 1, 1), lwd=3)
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 1e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   # budgetdifference <- c(state[1:214]-reproduction[2:215]-costs[1:214], 0)#
#
  # lines(budgetdifference, lty=3, col =2)#
       lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
Income
budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   lines(budgetdifference, lty=3, col =2)
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 1e+7), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 5e+7), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
quartz()  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 1e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown", xlab="Age (years)", ylim=c(0, 1e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 1e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
quartz()  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 1e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
data_files
data_files <- data_files1[c(2, 5, 8, 11)] #
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)#
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
                 food[j]<-Income_s[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival  #
      budget = cbind(state, reproduction*Jdensity, costs)#
     totalbudget <- rowSums(budget)      #quartz()  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 1e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 1e+9), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
budget = cbind(state, log(reproduction*Jdensity), costs)#
     totalbudget <- rowSums(budget)      #quartz()  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 4e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
log(reproduction*Jdensity)
budget = cbind(state, log(reproduction*Jdensity+1), costs)#
     totalbudget <- rowSums(budget)      #quartz()  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 4e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
budget = cbind(state, (reproduction*Jdensity), costs)#
     totalbudget <- rowSums(budget)      #quartz()  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 4e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
budget = cbind(state, (reproduction*Jdensity)/100, costs)#
     totalbudget <- rowSums(budget)      #quartz()  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 4e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
budget = cbind(state, (reproduction*Jdensity)/1000, costs)#
     totalbudget <- rowSums(budget)      #quartz()  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 4e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
max(budget)
max(budget)/Jdensity
budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)      #quartz()  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 4e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
Income
food
data_files
#quartz()  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 3e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
food/Jdensity
data_files <- data_files1[c(3, 6, 9, 12)]
les1[c(3, 6, 9, 12)]  #
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
                 food[j]<-Income_s[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival
reproduction
totalbudget <- rowSums(budget)      #quartz()  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 3e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
data_files1
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/")#
#
 source("Code/MTcosts.R")#
 setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/budget_analysis")      data_files1 <- list.files(pattern = "\\.csv$")#
#
 #data_files <- data_files1[c(1, 4, 7, 10)] #
 data_files <- data_files1[c(2, 5, 8, 11)]#
 #data_files <- data_files1[c(3, 6, 9, 12)]  #
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)#
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
                 food[j]<-Income_s[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival  #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)       quartz()  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 3e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
surv_data
rm(surv_data)
surv_data <- lapply(surv_filenames, read.csv)
surv_data
data_files1
data_files <- data_files1[c(2, 4, 6, 8)]#
 #data_files <- data_files1[c(3, 6, 9, 12)]  #
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
                 food[j]<-Income_s[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival
state
reproduction
budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)       quartz()  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 3e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
                 food[j]<-Income_c[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival  #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)       quartz()  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 3e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/budget_analysis")      data_files1 <- list.files(pattern = "\\.csv$")
data_files1
data_files <- data_files1[c(1, 4, 7, 10)] #unconstrained reproduction#
  data_files <- data_files1[c(2, 4, 6, 8)] #seas in T only#
 #data_files <- data_files1[c(3, 6, 9, 12)]  #
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)#
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
                 food[j]<-Income_s[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival  #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
survival
surv_data
rm(list = ls())#
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/")#
#
 source("Code/MTcosts.R")#
 setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/budget_analysis")      data_files1 <- list.files(pattern = "\\.csv$")#
#
 data_files <- data_files1[c(1, 4,  7, 10)] #unconstrained reproduction#
  data_files <- data_files1[c(2, 4, 6, 8)] #seas in T only#
 #data_files <- data_files1[c(3, 6, 9, 12)]  #
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)#
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
                 food[j]<-Income_s[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival  #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
data1
state_data
state_filenames
data_files1
data_files <- data_files1[c(1, 4,  7, 10)] #unconstrained reproduction#
  #data_files <- data_files1[c(2, 4, 6, 8)] #seas in T only#
 #data_files <- data_files1[c(3, 6, 9, 12)]  #
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)#
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
                 food[j]<-Income_s[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival  #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
# install.packages("FSA")#
# install.packages("nlstools")#
#
 # install.packages("ggplot2")#
library(ggplot2)#
#
Tmax=18#
time=1:(Tmax*12)#
quartz()#
windowframe=c(4,1)#
par(mfrow=windowframe)#
##Define functions#
plot_length <- function(data, filenames) {#
  matplot(t(data[,-1]), type="l", main=substr(filenames, 36, 40), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  maxsize <- (min(which(as.numeric(data[1, (2:215)]) == max(as.numeric(data[1, (2:215)]), na.rm =TRUE)))) + 1 #
  #print(data[1, maxsize])#
   #age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
   legend("topleft", legend=paste0("Lmax is ", data[1, maxsize], " cm"), bty="n")#
   return(data[1, maxsize])#
}#
plot_repro <- function(repro_data,  repro_filenames) {#
  matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="red", lwd=1.75, lty=1,   #
          ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n",  ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
   #print(repro_data[1, -1])#
  maxrepro <- max(as.numeric(repro_data[1, -1]), na.rm=TRUE) + 1 #
   return(maxrepro)#
}#
# #
fit_age <- 1:215 #note we are focused only on growth from 0.5 year to 18 years of age..... #
# #
# #
#### now define functions to calculate reproduction#
lifetimeR <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
  plot(data1[,2]*data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Reproductive value", xlab="Age (years)")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  TotalR <- sum(data1[,2]*data2)#
  return(c(substr(filenames, 23, 31), TotalR) )#
} #
cumsurv <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
  plot(data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Probability of survival to age", xlab="Age (years)")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
} #
##define wrapper function to calculate summary data for each temperature#
calc_metrics <- function(data_files)#
{#
# ## read in files#
#
repro_filenames <-#
  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]#
state_filenames <-#
  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /#
                                                        4))]#
length_filenames <- data_files[1:(length(data_files) / 4)]#
surv_filenames <-#
  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /#
                                                        4))]#
#
length_filenames <- unique(length_filenames)#
print(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
  food_tab1 <-#
  substr(length_filenames, 37, 40) #
    kappa <- c(0.25, 0.5, 1, 2 ) #
    	#need to add 5 to this string for alldata1#
    	#kappa <- c(0.25, 0.5, 1, 2,5 ) #
#
###define the environmental context for these results#
Temp <- substr(length_filenames, 13, 15) #
TempC <- as.numeric(Temp)-273.15#
maxlength <- mapply(plot_length, length_data, length_filenames) #
maxR <- mapply(plot_repro, repro_data,   repro_filenames) #
#
repro_results <-#
  mapply(lifetimeR, repro_data, surv_data, length_filenames)#
lifetime_repro <- as.numeric(repro_results[2, ]) #
#
####create the dataframe summarizing the results of all metrics#
tabdata <- cbind(TempC,  rep(kappa), maxlength, maxR, lifetime_repro)#
colnames(tabdata) <-#
  c("Temp",    "kappa", "Max_length", "Max_R", "lifetime_R")#
#
 return(tabdata)#
}#
#point to the files you want to compare#
#
    setwd("/Users/hkindsvater/Documents/size-spectra-life-history/Model_output/fig5/summary_table2")#
      data_files <- list.files(pattern = "\\.csv$")#
 tabdata  <- calc_metrics(data_files)#
 alldata <- as.data.frame(tabdata)#
#
alldata$Max_size <- as.numeric(alldata$Max_length)#
alldata$kappa <- as.numeric(alldata$kappa)#
alldata$lifetime_R <- as.numeric(alldata$lifetime_R)#
alldata$Max_R <- as.numeric(alldata$Max_R)#
#
alldata1<- alldata#
#
setwd("/Users/hkindsvater/Documents/size-spectra-life-history/Model_output/seasonal_results/seasKonly/summary_table")#
data_files <- list.files(pattern = "\\.csv$")#
tabdata  <- calc_metrics(data_files)#
#
alldata <- as.data.frame(tabdata)#
#
alldata$Max_size <- as.numeric(alldata$Max_length)#
alldata$kappa <- (as.numeric(alldata$kappa)*9*3 + as.numeric(alldata$kappa)*3) /12#
alldata$lifetime_R <- as.numeric(alldata$lifetime_R)#
alldata$Max_R <- as.numeric(alldata$Max_R)#
#
alldata2<- alldata #with seasonality in K only#
setwd("/Users/hkindsvater/Documents/size-spectra-life-history/Model_output/seasonal_results/seasTonly/summary_table")#
data_files <- list.files(pattern = "\\.csv$")#
tabdata  <- calc_metrics(data_files)#
#
alldata <- as.data.frame(tabdata)#
#
alldata$Max_size <- as.numeric(alldata$Max_length)#
alldata$kappa <- as.numeric(alldata$kappa)#
alldata$lifetime_R <- as.numeric(alldata$lifetime_R)#
alldata$Max_R <- as.numeric(alldata$Max_R)#
#
alldata3 <- alldata #withseasonality in T only#
setwd("/Users/hkindsvater/Documents/size-spectra-life-history/Model_output/seasonal_results/tuna/summary_table")#
data_files <- list.files(pattern = "\\.csv$")#
tabdata  <- calc_metrics(data_files)#
#
alldata <- as.data.frame(tabdata)#
#
alldata$Max_size <- as.numeric(alldata$Max_length)#
alldata$kappa <-  (as.numeric(alldata$kappa)*9*3 + as.numeric(alldata$kappa)*3) /12#
alldata$lifetime_R <- as.numeric(alldata$lifetime_R)#
alldata$Max_R <- as.numeric(alldata$Max_R)#
#
alldata4 <- alldata #with seasonality in both T and K #
setwd("/Users/hkindsvater/Documents/size-spectra-life-history/Model_output/seasonal_results/tuna/baselineSens")#
data_files <- list.files(pattern = "\\.csv$")#
tabdata  <- calc_metrics(data_files)#
#
alldata <- as.data.frame(tabdata)#
#
alldata$Max_size <- as.numeric(alldata$Max_length)#
alldata$kappa <-  c(1.25, 2.5, 1.25, 2.5)#
alldata$lifetime_R <- as.numeric(alldata$lifetime_R)#
alldata$Max_R <- as.numeric(alldata$Max_R)#
#
alldata5 <- alldata #alternative values for  K#
#
setwd("/Users/hkindsvater/Documents/size-spectra-life-history/Model_output/seasonal_results/tuna/seasTonlySens")#
data_files <- list.files(pattern = "\\.csv$")#
tabdata  <- calc_metrics(data_files)#
#
alldata <- as.data.frame(tabdata)#
#
alldata$Max_size <- as.numeric(alldata$Max_length)#
alldata$kappa <-  c(1.25, 2.5, 1.25, 2.5)#
alldata$lifetime_R <- as.numeric(alldata$lifetime_R)#
alldata$Max_R <- as.numeric(alldata$Max_R)#
#
alldata6 <- alldata #alternative values for K#
datatable <- rbind(alldata1, alldata2, alldata3, alldata4)#
datatable$env <- c(rep("Constant", 4), rep("Seasonality - K only", 4), rep("Seasonality - T only", 4), rep("Seasonality", 4))#
 dev.new(height = 4, width = 4, unit = "in")#
p1 <- ggplot(data = datatable,  aes(x = kappa, y = Max_size, group = as.factor(env))) +#
  geom_point(aes(color = as.factor(env), shape = as.factor(env)),  size = 3) +        #
  scale_color_manual(values = alpha(c("#80CDC1",   "#F67280",   "#355C7D",   "#6C5B7B" ), 0.85), name = "Environment" ) + #
   scale_shape_manual(values = c(19, 17, 18, 15), name = "Environment") +#
  ylim(c(0, 410)) +#
     ylab("Maximum length (cm)")   +#
  xlab(expression(kappa)) +#
  theme_bw()#
p1#
#
Jdensity <-  4.2e+6 #
datatable$repro_inkg <- datatable$lifetime_R/Jdensity#
ggplot(data = datatable,  aes(x = kappa, y = repro_inkg, group = as.factor(env))) +#
  geom_point(aes(color = as.factor(env), shape = as.factor(env)),  size = 3) +        #
  scale_color_manual(values = alpha(c("#80CDC1",   "#F67280",   "#355C7D",   "#6C5B7B" ), 0.85), name = "Environment" ) + #
   scale_shape_manual(values = c(19, 17, 18, 15), name = "Environment") +#
   xlim(c(0,5)) +#
#
  xlab(expression(kappa)) +#
  ylab("Expected Lifetime Reproduction (kg)")   +#
  theme_bw()#
#
###Make Table S1#
datatable2 <- rbind(alldata5, alldata2, alldata6, alldata4)#
datatable2$env <- c(rep("Constant", 4), rep("Seasonality - K only", 4), rep("Seasonality - T only", 4), rep("Seasonality", 4)  )#
datatable2$kappa[c(4, 12)]<- c(2.5, 2.5)#
datatable3 <- datatable2[,-c(1, 4:6)] #
 # write.csv(datatable3, file="tableS1.csv")
rm(list = ls())#
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/")#
#
 source("Code/MTcosts.R")#
 setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/budget_analysis")      data_files1 <- list.files(pattern = "\\.csv$")
data_files1
rm(list = ls())#
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/")#
#
 source("Code/MTcosts.R")#
 setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/budget_analysis")      data_files1 <- list.files(pattern = "\\.csv$")#
#
 data_files <- data_files1[c(1, 4,  7, 10)] ##
   #data_files <- data_files1[c(2, 4, 6, 8)] #seas in T only#
 #data_files <- data_files1[c(3, 6, 9, 12)]  #
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)#
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
                 food[j]<-Income_s[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival  #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
head(reproduction)
reproduction
budget = cbind(state, reproduction*Jdensity, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
data_files1
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)#
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
                 food[j]<-Income_s[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival  #
      budget = cbind(state, reproduction*Jdensity, costs)#
     totalbudget <- rowSums(budget)
reproduction
matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_c[x,y]*survival[j]    #
                 food[j]<-Income_c[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival  #
      budget = cbind(state, reproduction*Jdensity, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
rm(list = ls())#
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/")#
#
 source("Code/MTcosts.R")#
 setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/budget_analysis")      data_files1 <- list.files(pattern = "\\.csv$")#
#
 #data_files <- data_files1[c(1, 4,  7, 10)] #seasonality in resources but continuous spawning#
   #data_files <- data_files1[c(2, 5, 8, 11)] #seas in T only#
  data_files <- data_files1[c(3, 6, 9, 12)] #no seasonality; continuous spawning (baseline)#
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)#
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_c[x,y]*survival[j]    #
                 food[j]<-Income_c[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival  #
      budget = cbind(state, reproduction*Jdensity, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
data_files1
budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
                 food[j]<-Income_c[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival  #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
rm(list = ls())#
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/")#
#
 source("Code/MTcosts.R")#
 setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/budget_analysis")      data_files1 <- list.files(pattern = "\\.csv$")#
#
 #data_files <- data_files1[c(1, 4,  7, 10)] #seasonality in resources but continuous spawning#
  data_files <- data_files1[c(2, 5, 8, 11)] #no seasonality; continuous spawning (baseline)#
      #data_files <- data_files1[c(3, 6, 9, 12)] #seas in T only (compression into 3 months)#
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)#
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
                 food[j]<-Income_s[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival  #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
data_files1
reproduction <- data4*survival*Jdensity  #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
data_files <- data_files1[c(2, 5, 8, 11)] #no seasonality; continuous spawning (baseline)#
      #data_files <- data_files1[c(3, 6, 9, 12)] #seas in T only (compression into 3 months)#
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)#
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_c[x,y]*survival[j]    #
                 food[j]<-Income_c[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival*Jdensity  #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
data_files[1:3]
data_files1[1:3]
data_files1 <- list.files(pattern = "\\.csv$")
data_files1[1:2]
data_files1[1:4]
data_files1
data_files <- data_files1[c(3, 7, 11, 15)] #full seasonality
data_files
rm(list = ls())#
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/")#
#
 source("Code/MTcosts.R")#
 setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/budget_analysis")      data_files1 <- list.files(pattern = "\\.csv$")#
#
 #data_files <- data_files1[c(1, 5,  9, 13)] #seasonality in resources but continuous spawning -01LengthTemp290coef15e+16Kappa0.5reprolimit0.2Tmax216.csv#
 # data_files <- data_files1[c(2, 6, 10, 14)] #no seasonality; continuous spawning (baseline) -01LengthTemp290coef15e+16Kappa1.25reprolimit0.2Tmax216.csv#
  data_files <- data_files1[c(3, 7, 11, 15)] #full seasonality - 01LengthTemp290f_h0.67phi_p0.07Kappa0.5reprolimit0.2Tmax216.csv#
 #data_files <- data_files1[c(4, 8, 12, 16)] #seas in T only (compression into 3 months)-01LengthTemp290f_h0.67phi_p0.07Kappa1.25reprolimit0.2Tmax216.csv#
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)#
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_c[x,y]*survival[j]    #
                 food[j]<-Income_c[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival*Jdensity  #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
                 food[j]<-Income_s[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival*Jdensity  #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
reproduction <- data4*survival   #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
data_files <- data_files1[c(1, 5,  9, 13)] #seasonality in resources but continuous spawning -01LengthTemp290coef15e+16Kappa0.5reprolimit0.2Tmax216.csv#
 # data_files <- data_files1[c(2, 6, 10, 14)] #no seasonality; continuous spawning (baseline) -01LengthTemp290coef15e+16Kappa1.25reprolimit0.2Tmax216.csv#
 # data_files <- data_files1[c(3, 7, 11, 15)] #full seasonality - 01LengthTemp290f_h0.67phi_p0.07Kappa0.5reprolimit0.2Tmax216.csv#
 #data_files <- data_files1[c(4, 8, 12, 16)] #seas in T only (compression into 3 months)-01LengthTemp290f_h0.67phi_p0.07Kappa1.25reprolimit0.2Tmax216.csv#
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)#
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity
data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
                 food[j]<-Income_s[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival   #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
data_files <- data_files1[c(4, 8, 12, 16)] #seas in T only (compression into 3 months)-01LengthTemp290f_h0.67phi_p0.07Kappa1.25reprolimit0.2Tmax216.csv#
repro_filenames <-  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]state_filenames <-  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /                                                        4))]length_filenames <- data_files[1:(length(data_files) / 4)]surv_filenames <-  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /                                                        4))]length_filenames <- unique(length_filenames)print(length_filenames)repro_filenames <- unique(repro_filenames)state_filenames <- unique(state_filenames)surv_filenames <- unique(surv_filenames)length_data <- lapply(length_filenames, read.csv)repro_data <- lapply(repro_filenames, read.csv)state_data <-  lapply(state_filenames, read.csv)surv_data <- lapply(surv_filenames, read.csv)#
fit_age <- 1:215#
Jdensity <-  4.2e+6 a=1e-05*Jdensity#
 data1 <-  t(as.data.frame(state_data)[1, -c(1,216)]) data2 <-   as.data.frame(surv_data)[-216,]  #
 survival <- ifelse(data2[,2] > 0.03, 1, 0)  data3 <-   t(as.data.frame(length_data)[1, -c(1,216)])   data4 <- t(as.data.frame(repro_data)[1, -c(1,216)])    roundL <- as.numeric(floor(data3))          seasonvec <- rep(1:12, 18) #
          indexmat<-cbind(seasonvec[1:215], roundL)#
          costs <- rep(0, 215)#
          food <- rep(0, 215)         for (j in 1:215) {#
        	  x <- indexmat[j, 1]#
        	  y <- indexmat[j, 2]#
        	    costs[j]<- MTcosts_s[x,y]*survival[j]    #
                 food[j]<-Income_c[x,y]*Jdensity#
              }     state<- data1*survival#
     reproduction <- data4*survival   #
      budget = cbind(state, reproduction, costs)#
     totalbudget <- rowSums(budget)#
  matplot(1:215,  budget, type="l", xaxt="n", lty=1, lwd=3, ylab="Budget breakdown (J)", xlab="Age (years)", ylim=c(0, 2.5e+8), col = c("purple", "darkblue", "orange"))  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))   #lines(totalbudget, lwd=4)#
   #budgetdifference <- c(state[1:214]-reproduction[1:214]-costs[1:214]+food[1:214], 0)#
#
   #lines(budgetdifference, lty=3, col =2)#
       #lines((a*survival*roundL^3)*0.6, col="orange")   lines((a*roundL^3)*0.2, col= "blue", lwd = 1, lty=3)   lines((a*roundL^3)*0.1, col= "red", lwd=2, lty=3)#
   lines(food, col="dark green", lwd=2, lty=4)#
   legend("topright", legend=c( "income", "stores", "reproduction", "metabolic costs", "critical threshold", "gonad maximum"), bty="n", col=c("dark green", "purple", "dark blue", "orange", "red", "blue"  ), lty=c(4, 1, 1, 1, 3,3), lwd=3)
