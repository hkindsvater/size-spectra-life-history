require(fields)#
#
Tmax=18#
time=1:(Tmax*12)#
#define functions to make summary plots of results to check they are sensible#
plot_length <- function(data, filenames) {#
  matplot(t(data[,-1]), type="l", main=substr(filenames, 23, 31), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  return((data[1, -1]))#
}#
plot_repro <- function(repro_data, length_data, repro_filenames) {#
  #matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="red", lwd=1.75, lty=1,   #
         # ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n",  ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
  return(as.numeric(repro_data[1, -1]) )#
}#
# #
fit_age <- 1:215 #note we are focused only on growth from 0.5 year to 18 years of age..... #
# #
# #
#### now define functions to calculate metrics#
lifetimeR <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
   maxage <- which(survdata$x < 0.05)#
 # plot(data1[,2]*data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Reproductive value", xlab="Age (years)")#
  #axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  return(as.vector(data1[,2]*data2))#
} #
realized_M <-  function(survdata, filenames) {#
  annual_index<- seq(12, 215, 12)/12#
  data1  <- log(survdata$x[annual_index])#
  reg1 <- lm(data1~annual_index)#
  plot(annual_index, data1, ylab = "Ln(proportion surviving)", xlab = "Age (years)")#
  abline(reg1)#
   return(coef(reg1)[[2]])#
} #
maxage<-  function(survdata, filenames) {#
  lifespan <- min(which(survdata$x < 0.03))#
  return(lifespan)#
#
}#
#point to the files you want to compare#
    setwd("~/Model_output/fig5")#
 data_files <- list.files(pattern = "\\.csv$")#
#
# #
# ## read in files#
# #
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]#
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
quartz()#
dev.new(height = 4,width = 4,units ="in")#
L<-mapply(plot_length, length_data, length_filenames)    #
R<-mapply(plot_repro, repro_data, length_data, repro_filenames)#
RV<-mapply(lifetimeR, repro_data, surv_data, length_filenames)#
RV <- rbind(RV, rep(0, 10))#
lifespan <- mapply(maxage, surv_data, length_filenames) #
truncate_age <- function(kappamat, lifespan) { #where kappamat is L, R, or RV#
  for (i in 1:10) {#
  kappamat[lifespan[i]:(Tmax*10), i] <- NA#
  }#
  return(kappamat)#
}#
#
truncL <- truncate_age(L, lifespan)#
truncR <- truncate_age(R, lifespan)#
truncRV <- truncate_age(RV, lifespan)#
kappa <- c(0.25, 0.5, 1:8)#
  index <- c(1, 2, 3, 4, 5:10)#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Reproductive output (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .2), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)#
 #to make SUPPLEMENTAL FIGURE 3####
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:10)#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 pal = gray.colors(10, start=0.8, end=0.3)#
 matplot(truncL[1:204, index] , type = "p", pch=19, col= pal, cex=.3,  xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 pal = gray.colors(11, start=0.8, end=0.3)#
 matplot(truncR[1:204, index] , type = "p", pch=19, col= pal, cex=.3,   xaxt="n", xlab="Age (years)", ylab = "Reproductive output (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=gray.colors(10, start=0.8, end=0.3))#
 close.screen( all=TRUE)
getwd()
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history//Model_output/fig5")#
 data_files <- list.files(pattern = "\\.csv$")
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]#
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
quartz()#
dev.new(height = 4,width = 4,units ="in")#
L<-mapply(plot_length, length_data, length_filenames)    #
R<-mapply(plot_repro, repro_data, length_data, repro_filenames)#
RV<-mapply(lifetimeR, repro_data, surv_data, length_filenames)#
RV <- rbind(RV, rep(0, 10))#
lifespan <- mapply(maxage, surv_data, length_filenames) #
truncate_age <- function(kappamat, lifespan) { #where kappamat is L, R, or RV#
  for (i in 1:10) {#
  kappamat[lifespan[i]:(Tmax*10), i] <- NA#
  }#
  return(kappamat)#
}#
#
truncL <- truncate_age(L, lifespan)#
truncR <- truncate_age(R, lifespan)#
truncRV <- truncate_age(RV, lifespan)#
kappa <- c(0.25, 0.5, 1:8)#
  index <- c(1, 2, 3, 4, 5:10)#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Reproductive output (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .2), lwd=3, col=pal[i])#
 }
split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Reproductive output (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .3), lwd=3, col=pal[i])#
 }
kappa <- c(0.25, 0.5, 1:8)#
  index <- c(1, 2, 3, 4, 5:8)#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Reproductive output (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .3), lwd=3, col=pal[i])#
 }
quartz()#
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }
split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Reproductive output (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .3), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
index <- c(1, 2, 3, 4, 5,7)#
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Reproductive effort (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .3), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
kappa <- c(0.25, 0.5, 1:8)#
  index <- c(1:6)#
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Reproductive effort (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .3), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
index <- c(1, 2, 3, 4, 5 )#
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Reproductive effort (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .3), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive effort (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .3), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive effort (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .3), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\nouput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .3), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\nouput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .4), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(5, 4, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\nouput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .4), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\nouput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .4), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\nouput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .4), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\nouput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .5), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\nouput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .45), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\nouput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .45), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\nouput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .4), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\nouput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
   split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\nouput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
   split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\nouput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
   split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))
for (i in 1:length(index)){#
   lines((1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\nouput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines((1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .4), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
   split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   points(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\nouput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   points(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1),col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
   split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   points(1:(lifespan[index[i]]), truncL[1:(lifespan[index[i]]), col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\nouput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   points(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1),col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
   split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   points(1:lifespan[index[i]], truncR[1:lifespan[index[i]],col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\nouput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   points(1:lifespan[index[i]], truncR[1:lifespan[index[i]],col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
   split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, ylim=c(0,400), type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   points(1:lifespan[index[i]], truncR[1:lifespan[index[i]]],col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\nouput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   points(1:lifespan[index[i]], truncR[1:lifespan[index[i]]],col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:10)#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 pal = gray.colors(10, start=0.8, end=0.3)#
 matplot(truncL[1:204, index] , type = "p", pch=19, col= pal, cex=.3,  xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 pal = gray.colors(11, start=0.8, end=0.3)#
 matplot(truncR[1:204, index] , type = "p", pch=19, col= pal, cex=.3,   xaxt="n", xlab="Age (years)", ylab = "Reproductive output (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=gray.colors(10, start=0.8, end=0.3))#
 close.screen( all=TRUE)
zr<- range(kappa)#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 pal = gray.colors(10, start=0.8, end=0.3)#
 matplot(truncL[1:204, index] , type = "p", pch=19, col= pal, cex=.3,  xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 pal = gray.colors(11, start=0.8, end=0.3)#
 matplot(truncR[1:204, index] , type = "p", pch=19, col= pal, cex=.3,   xaxt="n", xlab="Age (years)", ylab = "Reproductive output (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=gray.colors(10, start=0.8, end=0.3))#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Reproductive/noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .2), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .2), lwd=3, col=pal[i])#
 }
index
index <- c(1, 2, 3, 4, 5:10)#
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .2), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)#
 #to make SUPPLEMENTAL FIGURE 3####
dev.new(height = 4,width = 4,units ="in")#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa)#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 pal = gray.colors(10, start=0.8, end=0.3)#
 matplot(truncL[1:204, index] , type = "p", pch=19, col= pal, cex=.3,  xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 pal = gray.colors(11, start=0.8, end=0.3)#
 matplot(truncR[1:204, index] , type = "p", pch=19, col= pal, cex=.3,   xaxt="n", xlab="Age (years)", ylab = "Reproductive output (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=gray.colors(10, start=0.8, end=0.3))#
 close.screen( all=TRUE)
split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa)#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 pal = gray.colors(10, start=0.8, end=0.3)#
 matplot(truncL[1:204, index] , las = 1, type = "p", pch=19, col= pal, cex=.3,  xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))
split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa)#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 pal = gray.colors(10, start=0.8, end=0.3)#
 matplot(truncL[1:150, index] , las = 1, type = "p", pch=19, col= pal, cex=.3,  xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))
13*12
dev.new(height = 4,width = 4,units ="in")#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa)#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 pal = gray.colors(10, start=0.8, end=0.3)#
 matplot(truncL[1:150, index] , las = 1, type = "p", pch=19, col= pal, cex=.3,  xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))
index <- c(1, 2, 3, 4, 5, 6)#
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .2), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
index <- c(1, 2, 3, 4, 5)#
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:204, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:204, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .2), lwd=3, col=pal[i])#
 }
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
#
 plot(1:204, truncL[1:150, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:204, truncR[1:150, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .2), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
#
 plot(1:150, truncL[1:150, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:150, truncR[1:150, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .2), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa)#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 pal = gray.colors(10, start=0.8, end=0.3)#
 matplot(truncL[1:150, index] , las = 1, type = "p", pch=19, col= pal, cex=.3,  xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 pal = gray.colors(11, start=0.8, end=0.3)#
 matplot(truncR[1:150, index] , type = "p", pch=19, col= pal, cex=.3,   xaxt="n", xlab="Age (years)", ylab = "Reproductive output (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=gray.colors(10, start=0.8, end=0.3))#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(1:length(index))#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
#
 plot(1:150, truncL[1:150, index[length(index)]] ,las = 1, type = "n", xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncL[1:(lifespan[index[i]]-1), index[i]], f = .01 ), lwd=3, col=pal[i])#
 }#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:150, truncR[1:150, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .2), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)#
 #to make SUPPLEMENTAL FIGURE 3####
dev.new(height = 4,width = 4,units ="in")#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa)#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "p", pch=19, col= pal, cex=.3,  xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 pal = gray.colors(11, start=0.8, end=0.3)#
 matplot(truncR[1:150, index] , type = "p", pch=19, col= pal, cex=.3,   xaxt="n", xlab="Age (years)", ylab = "Reproductive output (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=gray.colors(10, start=0.8, end=0.3))#
 close.screen( all=TRUE)
split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa)#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "p", pch=19, col= pal, cex=.3,  xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 pal = gray.colors(11, start=0.8, end=0.3)#
 matplot(truncR[1:150, index] , type = "p", pch=19, col= pal, cex=.3,   xaxt="n", xlab="Age (years)", ylab = "Reproductive output (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa)#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", pch=19, col= pal, cex=.3,  xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))
matplot(truncL[1:150, index] , las = 1, type = "l", lty=3, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))
dev.new(height = 4,width = 4,units ="in")#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa)#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))
pal = gray.colors(length(index), start=0.8, end=0.3)
dev.new(height = 4,width = 4,units ="in")#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa)#
 # first image#
 screen( ind[1])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))
screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:150, truncR[1:150, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .3), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
zr
zr<- range(index)#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:150, truncR[1:150, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .3), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(index)#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:150, truncR[1:150, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .3), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa[index])#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:150, truncR[1:150, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .7), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot(zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa[index])#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:150, truncR[1:150, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .5), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot(zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa[index])#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 plot(1:150, truncR[1:150, index[length(index)]] , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .45), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot(zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.size()
dev.size()
Kappa
kappa
split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))
screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 pal = gray.colors(11, start=0.8, end=0.3)#
 matplot(truncR[1:150, index] , type = "p", pch=19, col= pal, cex=.3,   xaxt="n", xlab="Age (years)", ylab = "Reproductive output (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))
dev.new(height = 4,width = 4,units ="in")#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 #second image#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
 pal = gray.colors(11, start=0.8, end=0.3)#
 matplot(truncR[1:150, index] , type = "p", pch=19, col= pal, cex=.3,   xaxt="n", xlab="Age (years)", ylab = "Reproductive output (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))
pal
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))
screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 matplot(truncR[1:150, index] , type = "p", pch=19, col= pal, cex=.3,   xaxt="n", xlab="Age (years)", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
# install.packages("FSA")#
# install.packages("nlstools")#
#
 # install.packages("ggplot2")#
library(ggplot2)#
#
Tmax=18#
time=1:(Tmax*12)#
quartz()#
windowframe=c(4,1)#
par(mfrow=windowframe)#
##Define functions#
plot_length <- function(data, filenames) {#
  matplot(t(data[,-1]), type="l", main=substr(filenames, 23, 31), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  maxsize <- (min(which(as.numeric(data[1, (2:215)]) == max(as.numeric(data[1, (2:215)]))))) + 1 #
  #print(data[1, maxsize])#
   #age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
   legend("topleft", legend=paste0("Lmax is ", data[1, maxsize], " cm"), bty="n")#
   return(data[1, maxsize])#
}#
plot_repro <- function(repro_data,  repro_filenames) {#
  matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="red", lwd=1.75, lty=1,   #
          ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n",  ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
   #print(repro_data[1, -1])#
  maxrepro <- max(as.numeric(repro_data[1, -1]), na.rm=TRUE) + 1 #
   return(maxrepro)#
}#
# #
fit_age <- 1:215 #note we are focused only on growth from 0.5 year to 18 years of age..... #
# #
# #
#### now define functions to calculate reproduction#
lifetimeR <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
  plot(data1[,2]*data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Reproductive value", xlab="Age (years)")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  TotalR <- sum(data1[,2]*data2)#
  return(c(substr(filenames, 23, 31), TotalR) )#
} #
cumsurv <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
  plot(data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Probability of survival to age", xlab="Age (years)")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
} #
##define wrapper function to calculate summary data for each temperature#
calc_metrics <- function(data_files)#
{#
# ## read in files#
#
repro_filenames <-#
  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]#
state_filenames <-#
  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /#
                                                        4))]#
length_filenames <- data_files[1:(length(data_files) / 4)]#
surv_filenames <-#
  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /#
                                                        4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
#
kappa <- c(1, 1.5, 2, 2.5, 3:10)#
index <- c(1, 3, 5:12)#
food_tab2 <- kappa[index]#
#
food_tab1 <-#
  substr(length_filenames, 37, 40)[index]#
food_tab2  <- round(as.numeric(gsub("r", 0, food_tab1)) * 12, 1) #
#
###define the environmental context for these results#
Temp <- substr(length_filenames, 13, 15)[index] #
TempC <- as.numeric(Temp)-273.15#
maxlength <- mapply(plot_length, length_data, length_filenames)[index]#
maxR <- mapply(plot_repro, repro_data,   repro_filenames)[index]#
#
repro_results <-#
  mapply(lifetimeR, repro_data, surv_data, length_filenames)#
lifetime_repro <- as.numeric(repro_results[2, ])[index] #
#
####create the dataframe summarizing the results of all metrics#
tabdata <- cbind(TempC,  food_tab2, maxlength, maxR, lifetime_repro)#
colnames(tabdata) <-#
  c("Temp",    "kappa", "Max_length", "Max_R", "lifetime_R")#
#
 return(tabdata)#
}#
#point to the files you want to compare#
#
    setwd("/Users/hkindsvater/Documents/size-spectra-life-history/Model_output/fig5")#
      data_files <- list.files(pattern = "\\.csv$")#
 tabdata  <- calc_metrics(data_files)
tabdata
data_files
setwd("/Users/hkindsvater/Documents/size-spectra-life-history/Model_output/fig5")#
      data_files <- list.files(pattern = "\\.csv$")#
 tabdata  <- calc_metrics(data_files)
tabdata
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/fig5")#
      data_files <- list.files(pattern = "\\.csv$")#
 tabdata  <- calc_metrics(data_files)#
 alldata <- as.data.frame(tabdata)
tabdata
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/fig6")#
      data_files <- list.files(pattern = "\\.csv$")#
 tabdata  <- calc_metrics(data_files)#
 alldata <- as.data.frame(tabdata)
tabdata
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/testdata")#
      data_files <- list.files(pattern = "\\.csv$")
data_files
filenames<-data_files
repro_filenames <-#
  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]#
state_filenames <-#
  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /#
                                                        4))]#
length_filenames <- data_files[1:(length(data_files) / 4)]#
surv_filenames <-#
  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /#
                                                        4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)
food_tab1 <-#
  substr(length_filenames, 37, 40)[index]
food_tab1
kappa <- c(0.5, 1)
Temp <- substr(length_filenames, 13, 15)[index]
Temp
TempC <- as.numeric(Temp)-273.15#
maxlength <- mapply(plot_length, length_data, length_filenames)[index]#
maxR <- mapply(plot_repro, repro_data,   repro_filenames)[index]#
#
repro_results <-#
  mapply(lifetimeR, repro_data, surv_data, length_filenames)#
lifetime_repro <- as.numeric(repro_results[2, ])[index]
maxR
TempC
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/fig6")#
      data_files <- list.files(pattern = "\\.csv$")#
 tabdata  <- calc_metrics(data_files)
tabdata
calc_metrics <- function(data_files)#
{#
# ## read in files#
#
repro_filenames <-#
  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]#
state_filenames <-#
  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /#
                                                        4))]#
length_filenames <- data_files[1:(length(data_files) / 4)]#
surv_filenames <-#
  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /#
                                                        4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
  food_tab1 <-#
  substr(length_filenames, 37, 40) #
    kappa <- c(0.25, 0.5, 1, 2, 3, 4, 5, 6)#
#
###define the environmental context for these results#
Temp <- substr(length_filenames, 13, 15) #
TempC <- as.numeric(Temp)-273.15#
maxlength <- mapply(plot_length, length_data, length_filenames) #
maxR <- mapply(plot_repro, repro_data,   repro_filenames) #
#
repro_results <-#
  mapply(lifetimeR, repro_data, surv_data, length_filenames)#
lifetime_repro <- as.numeric(repro_results[2, ]) #
#
####create the dataframe summarizing the results of all metrics#
tabdata <- cbind(TempC,  rep(kappa, 4), maxlength, maxR, lifetime_repro)#
colnames(tabdata) <-#
  c("Temp",    "kappa", "Max_length", "Max_R", "lifetime_R")#
#
 return(tabdata)#
}
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/fig6")#
      data_files <- list.files(pattern = "\\.csv$")#
 tabdata  <- calc_metrics(data_files)
tabdata
calc_metrics <- function(data_files)#
{#
# ## read in files#
#
repro_filenames <-#
  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]#
state_filenames <-#
  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /#
                                                        4))]#
length_filenames <- data_files[1:(length(data_files) / 4)]#
surv_filenames <-#
  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /#
                                                        4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
  food_tab1 <-#
  substr(length_filenames, 37, 40) #
    kappa <- c(0.25, 0.5, 1, 2, 3, 4, 5, 6)#
#
###define the environmental context for these results#
Temp <- substr(length_filenames, 13, 15) #
TempC <- as.numeric(Temp)-273.15#
maxlength <- mapply(plot_length, length_data, length_filenames) #
maxR <- mapply(plot_repro, repro_data,   repro_filenames) #
#
repro_results <-#
  mapply(lifetimeR, repro_data, surv_data, length_filenames)#
lifetime_repro <- as.numeric(repro_results[2, ]) #
#
####create the dataframe summarizing the results of all metrics#
tabdata <- cbind(TempC,  rep(kappa, 4), maxlength, maxR, lifetime_repro)#
colnames(tabdata) <-#
  c("Temp",    "kappa", "Max_length", "Max_R", "lifetime_R")#
#
 return(tabdata)#
}#
#point to the files you want to compare#
#
    setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/fig6")#
      data_files <- list.files(pattern = "\\.csv$")#
 tabdata  <- calc_metrics(data_files)
filenames <- data_files
repro_filenames <-#
  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]#
state_filenames <-#
  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /#
                                                        4))]#
length_filenames <- data_files[1:(length(data_files) / 4)]#
surv_filenames <-#
  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /#
                                                        4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)
mapply(plot_length, length_data, length_filenames)
tabdata
repro_filenames <-#
  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]#
state_filenames <-#
  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /#
                                                        4))]#
length_filenames <- data_files[1:(length(data_files) / 4)]#
surv_filenames <-#
  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /#
                                                        4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)
mapply(plot_length, length_data, length_filenames)
plot_length <- function(data, filenames) {#
  matplot(t(data[,-1]), type="l", main=substr(filenames, 36, 40), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  maxsize <- (min(which(as.numeric(data[1, (2:215)]) == max(as.numeric(data[1, (2:215)]), na.rm +TRUE)))) + 1 #
  #print(data[1, maxsize])#
   #age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
   legend("topleft", legend=paste0("Lmax is ", data[1, maxsize], " cm"), bty="n")#
   return(data[1, maxsize])#
}#
plot_repro <- function(repro_data,  repro_filenames) {#
  matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="red", lwd=1.75, lty=1,   #
          ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n",  ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
   #print(repro_data[1, -1])#
  maxrepro <- max(as.numeric(repro_data[1, -1]), na.rm=TRUE) + 1 #
   return(maxrepro)#
}#
# #
fit_age <- 1:215 #note we are focused only on growth from 0.5 year to 18 years of age..... #
# #
# #
#### now define functions to calculate reproduction#
lifetimeR <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
  plot(data1[,2]*data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Reproductive value", xlab="Age (years)")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  TotalR <- sum(data1[,2]*data2)#
  return(c(substr(filenames, 23, 31), TotalR) )#
} #
cumsurv <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
  plot(data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Probability of survival to age", xlab="Age (years)")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
} #
##define wrapper function to calculate summary data for each temperature#
calc_metrics <- function(data_files)#
{#
# ## read in files#
#
repro_filenames <-#
  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]#
state_filenames <-#
  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /#
                                                        4))]#
length_filenames <- data_files[1:(length(data_files) / 4)]#
surv_filenames <-#
  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /#
                                                        4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
  food_tab1 <-#
  substr(length_filenames, 37, 40) #
    kappa <- c(0.25, 0.5, 1, 2, 3, 4, 5, 6)#
#
###define the environmental context for these results#
Temp <- substr(length_filenames, 13, 15) #
TempC <- as.numeric(Temp)-273.15#
maxlength <- mapply(plot_length, length_data, length_filenames) #
maxR <- mapply(plot_repro, repro_data,   repro_filenames) #
#
repro_results <-#
  mapply(lifetimeR, repro_data, surv_data, length_filenames)#
lifetime_repro <- as.numeric(repro_results[2, ]) #
#
####create the dataframe summarizing the results of all metrics#
tabdata <- cbind(TempC,  rep(kappa, 4), maxlength, maxR, lifetime_repro)#
colnames(tabdata) <-#
  c("Temp",    "kappa", "Max_length", "Max_R", "lifetime_R")#
#
 return(tabdata)#
}#
#point to the files you want to compare#
#
    setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/fig6")#
      data_files <- list.files(pattern = "\\.csv$")#
 tabdata  <- calc_metrics(data_files)
##Define functions#
plot_length <- function(data, filenames) {#
  matplot(t(data[,-1]), type="l", main=substr(filenames, 36, 40), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  maxsize <- (min(which(as.numeric(data[1, (2:215)]) == max(as.numeric(data[1, (2:215)]), na.rm =TRUE)))) + 1 #
  #print(data[1, maxsize])#
   #age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
   legend("topleft", legend=paste0("Lmax is ", data[1, maxsize], " cm"), bty="n")#
   return(data[1, maxsize])#
}#
plot_repro <- function(repro_data,  repro_filenames) {#
  matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="red", lwd=1.75, lty=1,   #
          ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n",  ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
   #print(repro_data[1, -1])#
  maxrepro <- max(as.numeric(repro_data[1, -1]), na.rm=TRUE) + 1 #
   return(maxrepro)#
}#
# #
fit_age <- 1:215 #note we are focused only on growth from 0.5 year to 18 years of age..... #
# #
# #
#### now define functions to calculate reproduction#
lifetimeR <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
  plot(data1[,2]*data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Reproductive value", xlab="Age (years)")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  TotalR <- sum(data1[,2]*data2)#
  return(c(substr(filenames, 23, 31), TotalR) )#
} #
cumsurv <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
  plot(data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Probability of survival to age", xlab="Age (years)")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
} #
##define wrapper function to calculate summary data for each temperature#
calc_metrics <- function(data_files)#
{#
# ## read in files#
#
repro_filenames <-#
  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]#
state_filenames <-#
  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /#
                                                        4))]#
length_filenames <- data_files[1:(length(data_files) / 4)]#
surv_filenames <-#
  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /#
                                                        4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
  food_tab1 <-#
  substr(length_filenames, 37, 40) #
    kappa <- c(0.25, 0.5, 1, 2, 3, 4, 5, 6)#
#
###define the environmental context for these results#
Temp <- substr(length_filenames, 13, 15) #
TempC <- as.numeric(Temp)-273.15#
maxlength <- mapply(plot_length, length_data, length_filenames) #
maxR <- mapply(plot_repro, repro_data,   repro_filenames) #
#
repro_results <-#
  mapply(lifetimeR, repro_data, surv_data, length_filenames)#
lifetime_repro <- as.numeric(repro_results[2, ]) #
#
####create the dataframe summarizing the results of all metrics#
tabdata <- cbind(TempC,  rep(kappa, 4), maxlength, maxR, lifetime_repro)#
colnames(tabdata) <-#
  c("Temp",    "kappa", "Max_length", "Max_R", "lifetime_R")#
#
 return(tabdata)#
}#
#point to the files you want to compare#
#
    setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/fig6")#
      data_files <- list.files(pattern = "\\.csv$")#
 tabdata  <- calc_metrics(data_files)
tabdata
alldata <- as.data.frame(tabdata)#
#
alldata$Max_size <- as.numeric(alldata$Max_length)#
alldata$kappa <- as.numeric(alldata$kappa)#
alldata$lifetime_R <- as.numeric(alldata$lifetime_R)#
alldata$Max_R <- as.numeric(alldata$Max_R)
dev.new(height = 4, width = 4, unit = "in")#
 ggplot(data = alldata,  aes(x = kappa, y = Max_size, group = as.factor(Temp))) +#
   geom_point(aes(color = as.factor(Temp)), shape = 21, size = 4) +       #
   scale_color_manual(values = alpha(c("#018571", "#80CDC1", "#DFC27D", "#A6611A" ), 0.85), name = "Temp (C)" ) + #
   ylim(c(0, 300)) +#
   ylab("Maximum length (cm)")   +#
   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
   theme_bw()
ggplot(data = alldata,  aes(x = kappa, y = lifetime_R, group = as.factor(Temp))) +#
   geom_point(aes(color = as.factor(Temp)), shape = 21, size = 4)  +#
   scale_color_manual(values = alpha(c("#018571", "#80CDC1", "#DFC27D", "#A6611A" ), 0.85), name = "Temp (C)") + #
   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
   ylab("Expected Lifetime Reproduction (kg)")   +#
   theme_bw()
# install.packages("FSA")#
# install.packages("nlstools")#
#
 # install.packages("ggplot2")#
library(ggplot2)#
#
Tmax=18#
time=1:(Tmax*12)#
quartz()#
windowframe=c(4,1)#
par(mfrow=windowframe)#
##Define functions#
plot_length <- function(data, filenames) {#
  matplot(t(data[,-1]), type="l", main=substr(filenames, 36, 40), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  maxsize <- (min(which(as.numeric(data[1, (2:215)]) == max(as.numeric(data[1, (2:215)]), na.rm =TRUE)))) + 1 #
  #print(data[1, maxsize])#
   #age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
   legend("topleft", legend=paste0("Lmax is ", data[1, maxsize], " cm"), bty="n")#
   return(data[1, maxsize])#
}#
plot_repro <- function(repro_data,  repro_filenames) {#
  matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="red", lwd=1.75, lty=1,   #
          ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n",  ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
   #print(repro_data[1, -1])#
  maxrepro <- max(as.numeric(repro_data[1, -1]), na.rm=TRUE) + 1 #
   return(maxrepro)#
}#
# #
fit_age <- 1:215 #note we are focused only on growth from 0.5 year to 18 years of age..... #
# #
# #
#### now define functions to calculate reproduction#
lifetimeR <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
  plot(data1[,2]*data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Reproductive value", xlab="Age (years)")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  TotalR <- sum(data1[,2]*data2)#
  return(c(substr(filenames, 23, 31), TotalR) )#
} #
cumsurv <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
  plot(data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Probability of survival to age", xlab="Age (years)")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
} #
##define wrapper function to calculate summary data for each temperature#
calc_metrics <- function(data_files)#
{#
# ## read in files#
#
repro_filenames <-#
  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]#
state_filenames <-#
  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /#
                                                        4))]#
length_filenames <- data_files[1:(length(data_files) / 4)]#
surv_filenames <-#
  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /#
                                                        4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
  food_tab1 <-#
  substr(length_filenames, 37, 40) #
    kappa <- c(0.25, 0.5, 1, 2,   5, 6)#
#
###define the environmental context for these results#
Temp <- substr(length_filenames, 13, 15) #
TempC <- as.numeric(Temp)-273.15#
maxlength <- mapply(plot_length, length_data, length_filenames) #
maxR <- mapply(plot_repro, repro_data,   repro_filenames) #
#
repro_results <-#
  mapply(lifetimeR, repro_data, surv_data, length_filenames)#
lifetime_repro <- as.numeric(repro_results[2, ]) #
#
####create the dataframe summarizing the results of all metrics#
tabdata <- cbind(TempC,  rep(kappa, 4), maxlength, maxR, lifetime_repro)#
colnames(tabdata) <-#
  c("Temp",    "kappa", "Max_length", "Max_R", "lifetime_R")#
#
 return(tabdata)#
}#
#point to the files you want to compare#
#
    setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/fig6")#
      data_files <- list.files(pattern = "\\.csv$")#
 tabdata  <- calc_metrics(data_files)#
 alldata <- as.data.frame(tabdata)#
#
alldata$Max_size <- as.numeric(alldata$Max_length)#
alldata$kappa <- as.numeric(alldata$kappa)#
alldata$lifetime_R <- as.numeric(alldata$lifetime_R)#
alldata$Max_R <- as.numeric(alldata$Max_R)#
 dev.new(height = 4, width = 4, unit = "in")#
 ggplot(data = alldata,  aes(x = kappa, y = Max_size, group = as.factor(Temp))) +#
   geom_point(aes(color = as.factor(Temp)), shape = 19, size = 4) +       #
   scale_color_manual(values = alpha(c("#018571", "#80CDC1", "#DFC27D", "#A6611A" ), 0.85), name = "Temp (C)" ) + #
   ylim(c(0, 300)) +#
   ylab("Maximum length (cm)")   +#
   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
   theme_bw()#
 ggplot(data = alldata,  aes(x = kappa, y = lifetime_R, group = as.factor(Temp))) +#
   geom_point(aes(color = as.factor(Temp)), shape = 19, size = 4)  +#
   scale_color_manual(values = alpha(c("#018571", "#80CDC1", "#DFC27D", "#A6611A" ), 0.85), name = "Temp (C)") + #
   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
   ylab("Expected Lifetime Reproduction (kg)")   +#
   theme_bw()#
  #alldata
dev.new(height = 4, width = 4, unit = "in")#
 ggplot(data = alldata,  aes(x = kappa, y = Max_size, group = as.factor(Temp))) +#
   geom_point(aes(color = as.factor(Temp)), shape = 19, size = 4) +       #
   scale_color_manual(values = alpha(c("#018571", "#80CDC1", "#DFC27D", "#A6611A" ), 0.85), name = "Temp (C)" ) + #
   ylim(c(0, 400)) +#
   ylab("Maximum length (cm)")   +#
   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
   theme_bw()#
 ggplot(data = alldata,  aes(x = kappa, y = lifetime_R, group = as.factor(Temp))) +#
   geom_point(aes(color = as.factor(Temp)), shape = 19, size = 4)  +#
   scale_color_manual(values = alpha(c("#018571", "#80CDC1", "#DFC27D", "#A6611A" ), 0.85), name = "Temp (C)") + #
   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
   ylab("Expected Lifetime Reproduction (kg)")   +#
   theme_bw()#
  #alldata
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/fig6")#
      data_files <- list.files(pattern = "\\.csv$")#
 tabdata  <- calc_metrics(data_files)#
 alldata <- as.data.frame(tabdata)#
#
alldata$Max_size <- as.numeric(alldata$Max_length)#
alldata$kappa <- as.numeric(alldata$kappa)#
alldata$lifetime_R <- as.numeric(alldata$lifetime_R)#
alldata$Max_R <- as.numeric(alldata$Max_R)#
 dev.new(height = 4, width = 4, unit = "in")#
 ggplot(data = alldata,  aes(x = kappa, y = Max_size, group = as.factor(Temp))) +#
   geom_point(aes(color = as.factor(Temp)), shape = 19, size = 4) +       #
   scale_color_manual(values = alpha(c("#018571", "#80CDC1", "#DFC27D", "#A6611A" ), 0.85), name = "Temp (C)" ) + #
   ylim(c(0, 400)) +#
   ylab("Maximum length (cm)")   +#
   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
   theme_bw()#
 ggplot(data = alldata,  aes(x = kappa, y = lifetime_R, group = as.factor(Temp))) +#
   geom_point(aes(color = as.factor(Temp)), shape = 19, size = 4)  +#
   scale_color_manual(values = alpha(c("#018571", "#80CDC1", "#DFC27D", "#A6611A" ), 0.85), name = "Temp (C)") + #
   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
   ylab("Expected Lifetime Reproduction (kg)")   +#
   theme_bw()#
  #alldata
# install.packages("FSA")#
# install.packages("nlstools")#
#
 # install.packages("ggplot2")#
library(ggplot2)#
#
Tmax=18#
time=1:(Tmax*12)#
quartz()#
windowframe=c(4,1)#
par(mfrow=windowframe)#
##Define functions#
plot_length <- function(data, filenames) {#
  matplot(t(data[,-1]), type="l", main=substr(filenames, 36, 40), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  maxsize <- (min(which(as.numeric(data[1, (2:215)]) == max(as.numeric(data[1, (2:215)]), na.rm =TRUE)))) + 1 #
  #print(data[1, maxsize])#
   #age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
   legend("topleft", legend=paste0("Lmax is ", data[1, maxsize], " cm"), bty="n")#
   return(data[1, maxsize])#
}#
plot_repro <- function(repro_data,  repro_filenames) {#
  matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="red", lwd=1.75, lty=1,   #
          ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n",  ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
   #print(repro_data[1, -1])#
  maxrepro <- max(as.numeric(repro_data[1, -1]), na.rm=TRUE) + 1 #
   return(maxrepro)#
}#
# #
fit_age <- 1:215 #note we are focused only on growth from 0.5 year to 18 years of age..... #
# #
# #
#### now define functions to calculate reproduction#
lifetimeR <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
  plot(data1[,2]*data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Reproductive value", xlab="Age (years)")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  TotalR <- sum(data1[,2]*data2)#
  return(c(substr(filenames, 23, 31), TotalR) )#
} #
cumsurv <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
  plot(data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Probability of survival to age", xlab="Age (years)")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
} #
##define wrapper function to calculate summary data for each temperature#
calc_metrics <- function(data_files)#
{#
# ## read in files#
#
repro_filenames <-#
  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]#
state_filenames <-#
  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /#
                                                        4))]#
length_filenames <- data_files[1:(length(data_files) / 4)]#
surv_filenames <-#
  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /#
                                                        4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
  food_tab1 <-#
  substr(length_filenames, 37, 40) #
    kappa <- c(0.25, 0.5, 1, 2,   5, 6)#
#
###define the environmental context for these results#
Temp <- substr(length_filenames, 13, 15) #
TempC <- as.numeric(Temp)-273.15#
maxlength <- mapply(plot_length, length_data, length_filenames) #
maxR <- mapply(plot_repro, repro_data,   repro_filenames) #
#
repro_results <-#
  mapply(lifetimeR, repro_data, surv_data, length_filenames)#
lifetime_repro <- as.numeric(repro_results[2, ]) #
#
####create the dataframe summarizing the results of all metrics#
tabdata <- cbind(TempC,  rep(kappa, 4), maxlength, maxR, lifetime_repro)#
colnames(tabdata) <-#
  c("Temp",    "kappa", "Max_length", "Max_R", "lifetime_R")#
#
 return(tabdata)#
}#
#point to the files you want to compare#
#
    setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/fig6")#
      data_files <- list.files(pattern = "\\.csv$")#
 tabdata  <- calc_metrics(data_files)#
 alldata <- as.data.frame(tabdata)#
#
alldata$Max_size <- as.numeric(alldata$Max_length)#
alldata$kappa <- as.numeric(alldata$kappa)#
alldata$lifetime_R <- as.numeric(alldata$lifetime_R)#
alldata$Max_R <- as.numeric(alldata$Max_R)#
 dev.new(height = 4, width = 4, unit = "in")#
 ggplot(data = alldata,  aes(x = kappa, y = Max_size, group = as.factor(Temp))) +#
   geom_point(aes(color = as.factor(Temp)), shape = 19, size = 4) +       #
   scale_color_manual(values = alpha(c("#018571", "#80CDC1", "#DFC27D", "#A6611A" ), 0.85), name = "Temp (C)" ) + #
   ylim(c(0, 400)) +#
   ylab("Maximum length (cm)")   +#
   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
   theme_bw()#
 ggplot(data = alldata,  aes(x = kappa, y = lifetime_R, group = as.factor(Temp))) +#
   geom_point(aes(color = as.factor(Temp)), shape = 19, size = 4)  +#
   scale_color_manual(values = alpha(c("#018571", "#80CDC1", "#DFC27D", "#A6611A" ), 0.85), name = "Temp (C)") + #
   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
   ylab("Expected Lifetime Reproduction (kg)")   +#
   theme_bw()#
  #alldata
# install.packages("FSA")#
# install.packages("nlstools")#
#
 # install.packages("ggplot2")#
library(ggplot2)#
#
Tmax=18#
time=1:(Tmax*12)#
quartz()#
windowframe=c(4,1)#
par(mfrow=windowframe)#
##Define functions#
plot_length <- function(data, filenames) {#
  matplot(t(data[,-1]), type="l", main=substr(filenames, 36, 40), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  maxsize <- (min(which(as.numeric(data[1, (2:215)]) == max(as.numeric(data[1, (2:215)]), na.rm =TRUE)))) + 1 #
  #print(data[1, maxsize])#
   #age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
   legend("topleft", legend=paste0("Lmax is ", data[1, maxsize], " cm"), bty="n")#
   return(data[1, maxsize])#
}#
plot_repro <- function(repro_data,  repro_filenames) {#
  matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="red", lwd=1.75, lty=1,   #
          ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n",  ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
   #print(repro_data[1, -1])#
  maxrepro <- max(as.numeric(repro_data[1, -1]), na.rm=TRUE) + 1 #
   return(maxrepro)#
}#
# #
fit_age <- 1:215 #note we are focused only on growth from 0.5 year to 18 years of age..... #
# #
# #
#### now define functions to calculate reproduction#
lifetimeR <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
  plot(data1[,2]*data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Reproductive value", xlab="Age (years)")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  TotalR <- sum(data1[,2]*data2)#
  return(c(substr(filenames, 23, 31), TotalR) )#
} #
cumsurv <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
  plot(data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Probability of survival to age", xlab="Age (years)")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
} #
##define wrapper function to calculate summary data for each temperature#
calc_metrics <- function(data_files)#
{#
# ## read in files#
#
repro_filenames <-#
  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]#
state_filenames <-#
  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /#
                                                        4))]#
length_filenames <- data_files[1:(length(data_files) / 4)]#
surv_filenames <-#
  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /#
                                                        4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
  food_tab1 <-#
  substr(length_filenames, 37, 40) #
    kappa <- c(0.25, 0.5, 1, 2,   5, 6)#
#
###define the environmental context for these results#
Temp <- substr(length_filenames, 13, 15) #
TempC <- as.numeric(Temp)-273.15#
maxlength <- mapply(plot_length, length_data, length_filenames) #
maxR <- mapply(plot_repro, repro_data,   repro_filenames) #
#
repro_results <-#
  mapply(lifetimeR, repro_data, surv_data, length_filenames)#
lifetime_repro <- as.numeric(repro_results[2, ]) #
#
####create the dataframe summarizing the results of all metrics#
tabdata <- cbind(TempC,  rep(kappa, 4), maxlength, maxR, lifetime_repro)#
colnames(tabdata) <-#
  c("Temp",    "kappa", "Max_length", "Max_R", "lifetime_R")#
#
 return(tabdata)#
}#
#point to the files you want to compare#
#
    setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/fig6")#
      data_files <- list.files(pattern = "\\.csv$")#
 tabdata  <- calc_metrics(data_files)#
 alldata <- as.data.frame(tabdata)#
#
alldata$Max_size <- as.numeric(alldata$Max_length)#
alldata$kappa <- as.numeric(alldata$kappa)#
alldata$lifetime_R <- as.numeric(alldata$lifetime_R)#
alldata$Max_R <- as.numeric(alldata$Max_R)#
 dev.new(height = 4, width = 4, unit = "in")#
 ggplot(data = alldata,  aes(x = kappa, y = Max_size, group = as.factor(Temp))) +#
   geom_point(aes(color = as.factor(Temp)), shape = 19, size = 4) +       #
   scale_color_manual(values = alpha(c("#018571", "#80CDC1", "#DFC27D", "#A6611A" ), 0.85), name = "Temp (C)" ) + #
   ylim(c(0, 400)) +#
   ylab("Maximum length (cm)")   +#
   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
   theme_bw()#
 ggplot(data = alldata,  aes(x = kappa, y = lifetime_R, group = as.factor(Temp))) +#
   geom_point(aes(color = as.factor(Temp)), shape = 19, size = 4)  +#
   scale_color_manual(values = alpha(c("#018571", "#80CDC1", "#DFC27D", "#A6611A" ), 0.85), name = "Temp (C)") + #
   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
   ylab("Expected Lifetime Reproduction (kg)")   +#
   theme_bw()#
  #alldata
# install.packages("FSA")#
# install.packages("nlstools")#
#
 # install.packages("ggplot2")#
library(ggplot2)#
#
Tmax=18#
time=1:(Tmax*12)#
quartz()#
windowframe=c(4,1)#
par(mfrow=windowframe)#
##Define functions#
plot_length <- function(data, filenames) {#
  matplot(t(data[,-1]), type="l", main=substr(filenames, 36, 40), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  maxsize <- (min(which(as.numeric(data[1, (2:215)]) == max(as.numeric(data[1, (2:215)]), na.rm =TRUE)))) + 1 #
  #print(data[1, maxsize])#
   #age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
   legend("topleft", legend=paste0("Lmax is ", data[1, maxsize], " cm"), bty="n")#
   return(data[1, maxsize])#
}#
plot_repro <- function(repro_data,  repro_filenames) {#
  matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="red", lwd=1.75, lty=1,   #
          ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n",  ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
   #print(repro_data[1, -1])#
  maxrepro <- max(as.numeric(repro_data[1, -1]), na.rm=TRUE) + 1 #
   return(maxrepro)#
}#
# #
fit_age <- 1:215 #note we are focused only on growth from 0.5 year to 18 years of age..... #
# #
# #
#### now define functions to calculate reproduction#
lifetimeR <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
  plot(data1[,2]*data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Reproductive value", xlab="Age (years)")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  TotalR <- sum(data1[,2]*data2)#
  return(c(substr(filenames, 23, 31), TotalR) )#
} #
cumsurv <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
  plot(data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Probability of survival to age", xlab="Age (years)")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
} #
##define wrapper function to calculate summary data for each temperature#
calc_metrics <- function(data_files)#
{#
# ## read in files#
#
repro_filenames <-#
  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]#
state_filenames <-#
  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /#
                                                        4))]#
length_filenames <- data_files[1:(length(data_files) / 4)]#
surv_filenames <-#
  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /#
                                                        4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
  food_tab1 <-#
  substr(length_filenames, 37, 40) #
    kappa <- c(0.25, 0.5, 1, 2, 5)#
#
###define the environmental context for these results#
Temp <- substr(length_filenames, 13, 15) #
TempC <- as.numeric(Temp)-273.15#
maxlength <- mapply(plot_length, length_data, length_filenames) #
maxR <- mapply(plot_repro, repro_data,   repro_filenames) #
#
repro_results <-#
  mapply(lifetimeR, repro_data, surv_data, length_filenames)#
lifetime_repro <- as.numeric(repro_results[2, ]) #
#
####create the dataframe summarizing the results of all metrics#
tabdata <- cbind(TempC,  rep(kappa, 4), maxlength, maxR, lifetime_repro)#
colnames(tabdata) <-#
  c("Temp",    "kappa", "Max_length", "Max_R", "lifetime_R")#
#
 return(tabdata)#
}#
#point to the files you want to compare#
#
    setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/fig6")#
      data_files <- list.files(pattern = "\\.csv$")#
 tabdata  <- calc_metrics(data_files)#
 alldata <- as.data.frame(tabdata)#
#
alldata$Max_size <- as.numeric(alldata$Max_length)#
alldata$kappa <- as.numeric(alldata$kappa)#
alldata$lifetime_R <- as.numeric(alldata$lifetime_R)#
alldata$Max_R <- as.numeric(alldata$Max_R)#
 dev.new(height = 4, width = 4, unit = "in")#
 ggplot(data = alldata,  aes(x = kappa, y = Max_size, group = as.factor(Temp))) +#
   geom_point(aes(color = as.factor(Temp)), shape = 19, size = 4) +       #
   scale_color_manual(values = alpha(c("#018571", "#80CDC1", "#DFC27D", "#A6611A" ), 0.85), name = "Temp (C)" ) + #
   ylim(c(0, 400)) +#
   ylab("Maximum length (cm)")   +#
   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
   theme_bw()#
 ggplot(data = alldata,  aes(x = kappa, y = lifetime_R, group = as.factor(Temp))) +#
   geom_point(aes(color = as.factor(Temp)), shape = 19, size = 4)  +#
   scale_color_manual(values = alpha(c("#018571", "#80CDC1", "#DFC27D", "#A6611A" ), 0.85), name = "Temp (C)") + #
   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
   ylab("Expected Lifetime Reproduction (kg)")   +#
   theme_bw()#
  #alldata
Jdensity <-  4.2e+6 #
 ggplot(data = alldata,  aes(x = kappa, y = lifetime_R/Jdensity, group = as.factor(Temp))) +#
   geom_point(aes(color = as.factor(Temp)), shape = 19, size = 4)  +#
   scale_color_manual(values = alpha(c("#018571", "#80CDC1", "#DFC27D", "#A6611A" ), 0.85), name = "Temp (C)") + #
   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
   ylab("Expected Lifetime Reproduction (kg)")   +#
   theme_bw()
dev.new(height = 4, width = 4, unit = "in")#
 ggplot(data = alldata,  aes(x = kappa, y = Max_size, group = as.factor(Temp))) +#
   geom_point(aes(color = as.factor(Temp)), shape = 19, size = 4) +       #
   scale_color_manual(values = alpha(c("#018571", "#80CDC1", "#DFC27D", "#A6611A" ), 0.85), name = "Temp (C)" ) + #
   ylim(c(0, 400)) +#
   ylab("Maximum length (cm)")   +#
   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
   theme_bw()
dev.new(height = 4, width = 4, unit = "in")#
 ggplot(data = alldata,  aes(x = kappa, y = Max_size, group = as.factor(Temp))) +#
   geom_point(aes(color = as.factor(Temp)), shape = 19, size = 4) +       #
   scale_color_manual(values = alpha(c("#018571", "#80CDC1", "#DFC27D", "#A6611A" ), 0.85), name = "Temp (C)" ) + #
   ylim(c(0, 400)) +#
   ylab("Maximum length (cm)")   +#
   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
   theme_bw()#
 Jdensity <-  4.2e+6 #
 ggplot(data = alldata,  aes(x = kappa, y = lifetime_R/Jdensity, group = as.factor(Temp))) +#
   geom_point(aes(color = as.factor(Temp)), shape = 19, size = 4)  +#
   scale_color_manual(values = alpha(c("#018571", "#80CDC1", "#DFC27D", "#A6611A" ), 0.85), name = "Temp (C)") + #
   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
   ylab("Expected Lifetime Reproduction (kg)")   +#
   theme_bw()#
  #alldata
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 #second image#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
  Jdensity <-  4.2e+6 #
 matplot(truncR[1:150, index]/Jdensity , type = "p", pch=19, col= pal, cex=.3,   xaxt="n", xlab="Age (years)", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
require(fields)#
#
Tmax=18#
time=1:(Tmax*12)#
#define functions to make summary plots of results to check they are sensible#
plot_length <- function(data, filenames) {#
  matplot(t(data[,-1]), type="l", main=substr(filenames, 23, 31), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  return((data[1, -1]))#
}#
plot_repro <- function(repro_data, length_data, repro_filenames) {#
  #matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="red", lwd=1.75, lty=1,   #
         # ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n",  ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
  return(as.numeric(repro_data[1, -1]) )#
}#
# #
fit_age <- 1:215 #note we are focused only on growth from 0.5 year to 18 years of age..... #
# #
# #
#### now define functions to calculate metrics#
lifetimeR <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
   maxage <- which(survdata$x < 0.05)#
 # plot(data1[,2]*data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Reproductive value", xlab="Age (years)")#
  #axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  return(as.vector(data1[,2]*data2))#
} #
realized_M <-  function(survdata, filenames) {#
  annual_index<- seq(12, 215, 12)/12#
  data1  <- log(survdata$x[annual_index])#
  reg1 <- lm(data1~annual_index)#
  plot(annual_index, data1, ylab = "Ln(proportion surviving)", xlab = "Age (years)")#
  abline(reg1)#
   return(coef(reg1)[[2]])#
} #
maxage<-  function(survdata, filenames) {#
  lifespan <- min(which(survdata$x < 0.03))#
  return(lifespan)#
#
}#
#point to the files you want to compare#
    setwd("/Users/hkindsvater/Documents/size-spectra-life-history/Model_output/fig5")#
 data_files <- list.files(pattern = "\\.csv$")#
#
# #
# ## read in files#
# #
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]#
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
L<-mapply(plot_length, length_data, length_filenames)    #
R<-mapply(plot_repro, repro_data, length_data, repro_filenames)#
RV<-mapply(lifetimeR, repro_data, surv_data, length_filenames)#
RV <- rbind(RV, rep(0, 10))#
lifespan <- mapply(maxage, surv_data, length_filenames) #
truncate_age <- function(kappamat, lifespan) { #where kappamat is L, R, or RV#
  for (i in 1:10) {#
  kappamat[lifespan[i]:(Tmax*10), i] <- NA#
  }#
  return(kappamat)#
}#
#
truncL <- truncate_age(L, lifespan)#
truncR <- truncate_age(R, lifespan)#
truncRV <- truncate_age(RV, lifespan)#
kappa <- c(0.25, 0.5, 1:8)#
  index <- c(1, 2, 3, 4, 5)#
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa[index])#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 Jdensity <-  4.2e+6 #
#
 plot(1:150, truncR[1:150, index[length(index)]]/Jdensity , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]], f = .45), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot(zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)#
 #to make SUPPLEMENTAL FIGURE 3####
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 #second image#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
  Jdensity <-  4.2e+6 #
 matplot(truncR[1:150, index]/Jdensity , type = "p", pch=19, col= pal, cex=.3,   xaxt="n", xlab="Age (years)", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 4,width = 4,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa[index])#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 Jdensity <-  4.2e+6 #
#
 plot(1:150, truncR[1:150, index[length(index)]]/Jdensity , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1)/Jdensity, index[i]], f = .45), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot(zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
plot(1:150, truncR[1:150, index[length(index)]]/Jdensity , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]]//Jdensity, f = .45), lwd=3, col=pal[i])#
 }
split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa[index])#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 Jdensity <-  4.2e+6 #
#
 plot(1:150, truncR[1:150, index[length(index)]]/Jdensity , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]]//Jdensity, f = .45), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot(zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 Jdensity <-  4.2e+6 #
#
 plot(1:150, truncR[1:150, index[length(index)]]/Jdensity , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]]/Jdensity, f = .45), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot(zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa[index])#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 Jdensity <-  4.2e+6 #
#
 plot(1:150, truncR[1:150, index[length(index)]]/Jdensity , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]]/Jdensity, f = .45), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot(zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.size()
require(fields)#
#
Tmax=18#
time=1:(Tmax*12)#
#define functions to make summary plots of results to check they are sensible#
plot_length <- function(data, filenames) {#
  matplot(t(data[,-1]), type="l", main=substr(filenames, 23, 31), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  return((data[1, -1]))#
}#
plot_repro <- function(repro_data, length_data, repro_filenames) {#
  #matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="red", lwd=1.75, lty=1,   #
         # ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n",  ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
  return(as.numeric(repro_data[1, -1]) )#
}#
# #
fit_age <- 1:215 #note we are focused only on growth from 0.5 year to 18 years of age..... #
# #
# #
#### now define functions to calculate metrics#
lifetimeR <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
   maxage <- which(survdata$x < 0.05)#
 # plot(data1[,2]*data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Reproductive value", xlab="Age (years)")#
  #axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  return(as.vector(data1[,2]*data2))#
} #
realized_M <-  function(survdata, filenames) {#
  annual_index<- seq(12, 215, 12)/12#
  data1  <- log(survdata$x[annual_index])#
  reg1 <- lm(data1~annual_index)#
  plot(annual_index, data1, ylab = "Ln(proportion surviving)", xlab = "Age (years)")#
  abline(reg1)#
   return(coef(reg1)[[2]])#
} #
maxage<-  function(survdata, filenames) {#
  lifespan <- min(which(survdata$x < 0.03))#
  return(lifespan)#
#
}#
#point to the files you want to compare#
    setwd("/Users/hkindsvater/Documents/size-spectra-life-history/Model_output/fig5")#
 data_files <- list.files(pattern = "\\.csv$")#
#
# #
# ## read in files#
# #
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]#
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
L<-mapply(plot_length, length_data, length_filenames)    #
R<-mapply(plot_repro, repro_data, length_data, repro_filenames)#
RV<-mapply(lifetimeR, repro_data, surv_data, length_filenames)#
RV <- rbind(RV, rep(0, 10))#
lifespan <- mapply(maxage, surv_data, length_filenames) #
truncate_age <- function(kappamat, lifespan) { #where kappamat is L, R, or RV#
  for (i in 1:10) {#
  kappamat[lifespan[i]:(Tmax*10), i] <- NA#
  }#
  return(kappamat)#
}#
#
truncL <- truncate_age(L, lifespan)#
truncR <- truncate_age(R, lifespan)#
truncRV <- truncate_age(RV, lifespan)#
kappa <- c(0.25, 0.5, 1:8)#
  index <- c(1, 2, 3, 4, 5)#
dev.new(height = 5.5,width = 5,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa[index])#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 Jdensity <-  4.2e+6 #
#
 plot(1:150, truncR[1:150, index[length(index)]]/Jdensity , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]]/Jdensity, f = .45), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot(zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)#
 #to make SUPPLEMENTAL FIGURE 3####
dev.new(height = 5.5,width = 5,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 #second image#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
  Jdensity <-  4.2e+6 #
 matplot(truncR[1:150, index]/Jdensity , type = "p", pch=19, col= pal, cex=.3,   xaxt="n", xlab="Age (years)", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/fig5")#
 data_files <- list.files(pattern = "\\.csv$")#
#
# #
# ## read in files#
# #
repro_filenames <- data_files[((length(data_files)/4)+1):(2*(length(data_files)/4))]#
state_filenames <- data_files[(2*(length(data_files)/4)+1):(3*(length(data_files)/4))]#
length_filenames <- data_files[1:(length(data_files)/4)]#
surv_filenames <- data_files[(3*(length(data_files)/4)+1):(4*(length(data_files)/4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
L<-mapply(plot_length, length_data, length_filenames)    #
R<-mapply(plot_repro, repro_data, length_data, repro_filenames)#
RV<-mapply(lifetimeR, repro_data, surv_data, length_filenames)#
RV <- rbind(RV, rep(0, 10))#
lifespan <- mapply(maxage, surv_data, length_filenames) #
truncate_age <- function(kappamat, lifespan) { #where kappamat is L, R, or RV#
  for (i in 1:10) {#
  kappamat[lifespan[i]:(Tmax*10), i] <- NA#
  }#
  return(kappamat)#
}#
#
truncL <- truncate_age(L, lifespan)#
truncR <- truncate_age(R, lifespan)#
truncRV <- truncate_age(RV, lifespan)#
kappa <- c(0.25, 0.5, 1:8)#
  index <- c(1, 2, 3, 4, 5)#
dev.new(height = 5.5,width = 5,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa[index])#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 Jdensity <-  4.2e+6 #
#
 plot(1:150, truncR[1:150, index[length(index)]]/Jdensity , type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]]/Jdensity, f = .45), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot(zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)#
 #to make SUPPLEMENTAL FIGURE 3####
dev.new(height = 5.5,width = 5,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 #second image#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
  Jdensity <-  4.2e+6 #
 matplot(truncR[1:150, index]/Jdensity , type = "p", pch=19, col= pal, cex=.3,   xaxt="n", xlab="Age (years)", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 5.5,width = 5,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa[index])#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 Jdensity <-  4.2e+6 #
#
 plot(1:150, truncR[1:150, index[length(index)]]/Jdensity , las = 1, type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]]/Jdensity, f = .45), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot(zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)#
 #to make SUPPLEMENTAL FIGURE 3####
dev.new(height = 5.5,width = 5,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 #second image#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
  Jdensity <-  4.2e+6 #
 matplot(truncR[1:150, index]/Jdensity ,  las = 1,type = "p", pch=19, col= pal, cex=.3,   xaxt="n", xlab="Age (years)", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 5.5,width = 5,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 #second image#
 screen( ind[2])#
 par(mar = c(4, 4, 0.5, 0.5))  #
  Jdensity <-  4.2e+6 #
 matplot(truncR[1:150, index]/Jdensity ,  las = 1,type = "p", pch=19, col= pal, cex=.3,   xaxt="n", xlab="Age (years)", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 5.5,width = 5,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 #second image#
 screen( ind[2])#
 par(mar = c(4, 6, 0.5, 0.5))  #
  Jdensity <-  4.2e+6 #
 matplot(truncR[1:150, index]/Jdensity ,  las = 1,type = "p", pch=19, col= pal, cex=.3,   xaxt="n", xlab="Age (years)", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 5.5,width = 5,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 #second image#
 screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
  Jdensity <-  4.2e+6 #
 matplot(truncR[1:150, index]/Jdensity ,  las = 1,type = "p", pch=19, col= pal, cex=.3,   xaxt="n", xlab="Age (years)", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot( zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
dev.new(height = 5.5,width = 5,units ="in")#
  pal = gray.colors(length(index), start=0.8, end=0.3)#
 split.screen( rbind(c(0, .8,0,1), c(.8,1,0,1)))#
 # now divide up the figure region #
 split.screen(c(2,1), screen=1)-> ind#
 zr<- range(kappa[index])#
 # first image#
 screen( ind[1])#
 par(mar = c(4,5, 0.5, 0.5))  #
 matplot(truncL[1:150, index] , las = 1, type = "l", lty=1, lwd=3, col= pal,   xaxt="n", xlab="", ylab = "Length (cm)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
screen( ind[2])#
 par(mar = c(4, 5, 0.5, 0.5))  #
 Jdensity <-  4.2e+6 #
#
 plot(1:150, truncR[1:150, index[length(index)]]/Jdensity , las = 1, type = "n", xaxt="n", xlab="", ylab = "Reproductive\noutput (kg)")#
 axis(1, at = seq(0, (17)*12, by=12), labels = (seq(1, 18, by=1)))#
 for (i in 1:length(index)){#
   lines(lowess(1:(lifespan[index[i]]-1), truncR[1:(lifespan[index[i]]-1), index[i]]/Jdensity, f = .45), lwd=3, col=pal[i])#
 }#
 # move to skinny region on right and draw the legend strip #
 screen( 2)#
 image.plot(zlim=zr,legend.only=TRUE, smallplot=c(.1,.2, .3,.7),#
             col=pal)#
 close.screen( all=TRUE)
# install.packages("ggplot2")#
library(ggplot2)#
#
Tmax=18#
time=1:(Tmax*12)#
quartz()#
windowframe=c(4,1)#
par(mfrow=windowframe)#
##Define functions#
plot_length <- function(data, filenames) {#
  matplot(t(data[,-1]), type="l", main=substr(filenames, 23, 31), col="darkgray", lwd=1.75, lty=1,  ylab="Length (cm)", ylim=c(0, 400), xlim=c(0.5, Tmax*12), xlab= "Age (years)", xaxt="n")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  maxsize <- (min(which(as.numeric(data[1, (2:215)]) == max(as.numeric(data[1, (2:215)]), na.rm = TRUE)))) + 1 #
  #print(data[1, maxsize])#
   #age_m <- min(which(as.numeric(data[1, -1]) >= 0.5*as.numeric(data[1, maxsize])))/12 #
   legend("topleft", legend=paste0("Lmax is ", data[1, maxsize], " cm"), bty="n")#
   return(data[1, maxsize])#
}#
plot_repro <- function(repro_data,  repro_filenames) {#
  matplot(t(repro_data[,-1]), type="l", main= substr(repro_filenames, 8, 23), col="red", lwd=1.75, lty=1,   #
          ylab="Reproduction (J)",   xlab= "Age (years)", xaxt="n",  ylim=c(0, 5e+08), xlim=c(0.5, Tmax*12))#
   #print(repro_data[1, -1])#
  maxrepro <- max(as.numeric(repro_data[1, -1]), na.rm=TRUE) + 1 #
   return(maxrepro)#
}#
# #
fit_age <- 1:215 #note we are focused only on growth from 0.5 year to 18 years of age..... #
# #
# #
#### now define functions to calculate reproduction#
lifetimeR <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
  plot(data1[,2]*data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Reproductive value", xlab="Age (years)")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
  TotalR <- sum(data1[,2]*data2)#
  return(c(substr(filenames, 23, 31), TotalR) )#
} #
cumsurv <-  function(reprodata, survdata, filenames) {#
  data1 <- (as.data.frame(t(rbind(fit_age, reprodata[1, 1:215]))))#
  data2 <- survdata$x[-216]#
  plot(data2, type="l",main=substr(filenames, 23, 31), xaxt="n", lwd=3,ylim=c(0, 5e+07), xlim=c(0.5, Tmax*12), ylab="Probability of survival to age", xlab="Age (years)")#
  axis(1, at = seq(0, (Tmax)*12, by=12), labels = (seq(1, Tmax+1, by=1)))#
} #
##define wrapper function to calculate summary data for each theta#
calc_metrics <- function(data_files)#
{#
# ## read in files#
#
repro_filenames <-#
  data_files[((length(data_files) / 4) + 1):(2 * (length(data_files) / 4))]#
state_filenames <-#
  data_files[(2 * (length(data_files) / 4) + 1):(3 * (length(data_files) /#
                                                        4))]#
length_filenames <- data_files[1:(length(data_files) / 4)]#
surv_filenames <-#
  data_files[(3 * (length(data_files) / 4) + 1):(4 * (length(data_files) /#
                                                        4))]#
#
length_filenames <- unique(length_filenames)#
repro_filenames <- unique(repro_filenames)#
state_filenames <- unique(state_filenames)#
surv_filenames <- unique(surv_filenames)#
#
length_data <- lapply(length_filenames, read.csv)#
repro_data <- lapply(repro_filenames, read.csv)#
state_data <- lapply(state_filenames, read.csv)#
surv_data <- lapply(surv_filenames, read.csv)#
food_tab1 <-#
  substr(length_filenames, 37, 41)#
###define the environmental context for these results#
Temp <- substr(length_filenames, 13, 15)#
TempC <- as.numeric(Temp)-273.15#
thet <-substr(length_filenames, 28, 31)#
theta <- gsub("K", 0, thet)#
maxlength <- mapply(plot_length, length_data, length_filenames)#
maxR <- mapply(plot_repro, repro_data,   repro_filenames)#
#
repro_results <-#
  mapply(lifetimeR, repro_data, surv_data, length_filenames)#
lifetime_repro <- as.numeric(repro_results[2, ]) #
#
####create the dataframe summarizing the results of all metrics#
tabdata <- cbind(TempC,  theta, food_tab1, maxlength, maxR, lifetime_repro)#
colnames(tabdata) <-#
  c("Temp", "theta",    "kappa", "Max_length", "Max_R", "lifetime_R")#
print(length_filenames)#
 return(tabdata)#
}#
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/Results_ss/thetasens/")#
data_files295 <- list.files(pattern = "\\.csv$")#
tabdata2 <- calc_metrics(data_files295)#
#
#  #
#  #
# data285 <- as.data.frame(tabdata1)#
# #
# data285$Max_size <- as.numeric(data285$Max_length)#
# data285$kappa <- as.numeric(data285$kappa)#
# data285$lifetime_R <- as.numeric(data285$lifetime_R)#
# data285$Max_R <- as.numeric(data285$Max_R)#
# #
#  quartz()#
# ggplot(data = data285,  aes(x = kappa, y = Max_size, group = as.factor(theta))) +#
#   geom_point(aes(color = as.factor(theta)), shape = 18, size = 4) +#
#   scale_color_manual(values = alpha(c("#45b6fe", "#3792cb", "#296d98"  ), 0.85), name = "theta" ) + #
#   ylim(c(0, 300)) +#
#   ylab("Maximum length (cm)")   +#
#   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
#   theme_bw()#
# #
# #
# ggplot(data = data285,  aes(x = kappa, y = lifetime_R, group = as.factor(theta))) +#
#   geom_point(aes(color = as.factor(theta)), shape = 18, size = 4) +       #
#   #
#   scale_color_manual(values = alpha(c("#45b6fe", "#3792cb", "#296d98" ), 0.85), name = "theta" ) + #
#   scale_x_continuous(expression(kappa), 1:10, 1:10) +#
#   #
#   ylab("Expected Lifetime Reproduction (kg)")   +#
#   theme_bw()#
data295 <- as.data.frame(tabdata2)#
#
data295$Max_size <- round(as.numeric(data295$Max_length), 1)#
data295$kappa <- c(0.25, 0.5, 1, 2, 4, 0.25, 0.5,1, 2, 4)#
data295$lifetime_R <- as.numeric(data295$lifetime_R)#
data295$Max_R <- as.numeric(data295$Max_R)#
#
 quartz()#
ggplot(data = data295,  aes(x = kappa, y = Max_size, group = as.factor(theta))) +#
  geom_point(aes(color = as.factor(theta)), shape = 18, size = 4) +       #
  scale_color_manual(values = alpha(c("#45b6fe",   "#296d98" ), 0.85), name = "theta" ) + #
  ylim(c(0, 400)) +#
  ylab("Maximum length (cm)")   +#
  scale_x_continuous(expression(kappa), 1:10, 1:10) +#
  theme_bw()#
ggplot(data = data295,  aes(x = kappa, y = lifetime_R, group = as.factor(theta))) +#
  geom_point(aes(color = as.factor(theta)), shape = 18, size = 4) +       #
  scale_color_manual(values = alpha(c("#45b6fe",   "#296d98" ), 0.85), name = "theta" ) + #
  scale_x_continuous(expression(kappa), 1:10, 1:10) +#
  ylab("Expected Lifetime Reproduction (kg)")   +#
  theme_bw()
tabdata2
data295
datafiles
data_files
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/thetasens/")
data_file <- list.files(pattern = "\\.csv$")#
tabdata2 <- calc_metrics(data_files)
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/thetasens/285")#
data_file285 <- list.files(pattern = "\\.csv$")#
tabdata2 <- calc_metrics(data_file285)
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/thetasens/285/")#
data_file285 <- list.files(pattern = "\\.csv$")#
tabdata2 <- calc_metrics(data_file285)
datafile285
data_file285
calc_metrics(data_file285)
setwd("/Users/hollykindsvater/Documents/size-spectra-life-history/Model_output/thetasens/295/")#
data_file295 <- list.files(pattern = "\\.csv$")#
tabdata2 <- calc_metrics(data_file295)#
data295 <- as.data.frame(tabdata2)
data295
quartz()#
 dev.size(height = 4, width = 4, unit = "in")#
ggplot(data = data295,  aes(x = kappa, y = Max_size, group = as.factor(theta))) +#
  geom_point(aes(color = as.factor(theta)), shape = 18, size = 4) +       #
  scale_color_manual(values = alpha(c("#45b6fe",   "#296d98" ), 0.85), name = "theta" ) + #
  ylim(c(0, 400)) +#
  ylab("Maximum length (cm)")   +#
  scale_x_continuous(expression(kappa), 1:10, 1:10) +#
  theme_bw()#
#
Jdensity <-  4.2e+6 #
ggplot(data = data295,  aes(x = kappa, y = lifetime_R/Jdensity, group = as.factor(theta))) +#
  geom_point(aes(color = as.factor(theta)), shape = 18, size = 4) +       #
  scale_color_manual(values = alpha(c("#45b6fe",   "#296d98" ), 0.85), name = "theta" ) + #
  scale_x_continuous(expression(kappa), 1:10, 1:10) +#
  ylab("Expected Lifetime Reproduction (kg)")   +#
  theme_bw()
data295$Max_size <- round(as.numeric(data295$Max_length), 1)#
data295$kappa <- c(0.25, 0.5, 1, 2, 4, 0.25, 0.5,1, 2, 4)#
data295$lifetime_R <- as.numeric(data295$lifetime_R)#
data295$Max_R <- as.numeric(data295$Max_R)#
#
 quartz()#
 dev.size(height = 4, width = 4, unit = "in")#
ggplot(data = data295,  aes(x = kappa, y = Max_size, group = as.factor(theta))) +#
  geom_point(aes(color = as.factor(theta)), shape = 18, size = 4) +       #
  scale_color_manual(values = alpha(c("#45b6fe",   "#296d98" ), 0.85), name = "theta" ) + #
  ylim(c(0, 400)) +#
  ylab("Maximum length (cm)")   +#
  scale_x_continuous(expression(kappa), 1:10, 1:10) +#
  theme_bw()#
#
Jdensity <-  4.2e+6 #
ggplot(data = data295,  aes(x = kappa, y = lifetime_R/Jdensity, group = as.factor(theta))) +#
  geom_point(aes(color = as.factor(theta)), shape = 18, size = 4) +       #
  scale_color_manual(values = alpha(c("#45b6fe",   "#296d98" ), 0.85), name = "theta" ) + #
  scale_x_continuous(expression(kappa), 1:10, 1:10) +#
  ylab("Expected Lifetime Reproduction (kg)")   +#
  theme_bw()
?dev_new
?dev.new
quartz()#
 dev.new(height = 4, width = 4, unit = "in")#
ggplot(data = data295,  aes(x = kappa, y = Max_size, group = as.factor(theta))) +#
  geom_point(aes(color = as.factor(theta)), shape = 18, size = 4) +       #
  scale_color_manual(values = alpha(c("#45b6fe",   "#296d98" ), 0.85), name = "theta" ) + #
  ylim(c(0, 400)) +#
  ylab("Maximum length (cm)")   +#
  scale_x_continuous(expression(kappa), 1:10, 1:10) +#
  theme_bw()#
#
Jdensity <-  4.2e+6 #
ggplot(data = data295,  aes(x = kappa, y = lifetime_R/Jdensity, group = as.factor(theta))) +#
  geom_point(aes(color = as.factor(theta)), shape = 18, size = 4) +       #
  scale_color_manual(values = alpha(c("#45b6fe",   "#296d98" ), 0.85), name = "theta" ) + #
  scale_x_continuous(expression(kappa), 1:10, 1:10) +#
  ylab("Expected Lifetime Reproduction (kg)")   +#
  theme_bw()
